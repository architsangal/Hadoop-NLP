[ 1993 07 04 yes/no ] { yes } { C } { Unix-like systems } { Cross-platform } { 18 MB (compressed) } { Active } { Compatibility layer } { GNU LGPL v2.1+ } Wine is a free and open source software application that aims to allow computer programs written for Microsoft Windows to run on Unix-like operating system s. Wine also provides a software library, known as Winelib, against which developers can compile Windows applications to help port them to Unix-like systems. [ http://winehq.org/site/winelib Winelib Wine HQ 29 June 2008 ] Wine is a compatibility layer. It duplicates functions of a Windows computer by providing alternative implementations of the DLL s that Windows programs call, [ June 2011 ] and a process to substitute for the Windows NT kernel. This method of duplication differs from other methods that might also be considered emulation, where Windows programs run in a virtual machine. [ http://wiki.winehq.org/FAQ#head-c9e6502ad636315e905d07f7e44594757a6738e3 Is Wine an emulator? There seems to be disagreement. ] Wine is predominantly written using black-box testing reverse-engineering, to avoid copyright issues. [ http://forum.winehq.org/viewtopic.php?p%3D37364#37364 Legal Issues James Mckenzie 26 December 2009 WineHQ Forums ] The name Wine initially was an acronym for WINdows Emulator. { WINE FAQ Old meaning of the name even used until 1997 } Its meaning later shifted to the recursive backronym, W&apos;ine Is Not an E&apos;mulator in order to differentiate the software from other emulators. { Wine Is Not an Emulator First proposal to change the meaning of the name WINE } While the name sometimes appears in the forms WINE and wine, the project developers have agreed to standardize on the form Wine. [ http://wiki.winehq.org/FAQ?action%3Drecall%26amp%3Brev%3D217#head-8b4fbbe473bd0d51d936bcf298f5b7f0e8d25f2e Why do some people write WINE and not Wine? Wine Wiki FAQ Official Wine Wiki 7 July 2008 13 July 2008 ] In a 2007 survey by desktoplinux.com of 38,500 Linux desktop users, 31.5% of respondents reported using Wine to run Windows applications. [ 2007 Desktop Linux Market survey http://www.desktoplinux.com/cgi-bin/survey/survey.cgi?view%3Darchive%26amp%3Bid%3D0813200712407 21 August 2007 8 October 2007 ] This plurality was larger than all x86 virtualization programs combined, as well as larger than the 27.9% who reported not running Windows applications. [ http://www.desktoplinux.com/news/NS8454912761.html Running Windows applications on Linux 2007 Desktop Linux Survey results Steven J. Vaughan-Nichols 22 August 2007 DesktopLinux ] [ History ] Bob Amstadt (the initial project leader) and Eric Youngdale started the Wine project in 1993 as a way to run Windows applications on Linux. It was inspired by two Sun Microsystems &apos; products, the Wabi for the Solaris operating system, and the Public Windows Initiative [ http://groups.google.com/group/comp.windows.x.i386unix/browse_thread/thread/88fbd87c0ae2e48f/5003eb8ed33ae522 Wine project status Bob Amstadt comp.windows.x.i386unix 29 September 1993 13 July 2008 ] (an attempt to get the Windows API fully reimplemented in the public domain as an ISO standard, but rejected by the entity due to pressure from Microsoft in 1996). [ http://findarticles.com/p/articles/mi_m0CGN/is_1999_May_7/ai_54580586 Sun Uses ECMA as Path to ISO Java Standardization Computergram International 7 May 1999 13 July 2008 ] Wine originally targeted Windows 3.x ( 16-bit ) application software, but [ 2010 on ] focuses on 32-bit and 64-bit applications. The project originated in discussions on Usenet in [news:comp.os.linux comp.os.linux] in June 1993. [ WABI available on linux or not Byron A Jeff 25 August 1993 comp.os.linux.misc http://groups.google.com/group/comp.os.linux.misc/msg/daa52d28ff44919f 21 September 2007 ] Alexandre Julliard has led the project since 1994. The project has proved time-consuming and difficult for the developers, mostly because of incomplete and incorrect documentation of the Windows API. While Microsoft extensively documents most Win32 functions, some areas such as file format s and protocol s have no official Microsoft specification. Microsoft Windows also includes undocumented low-level functions and obscure bugs that Wine must duplicate precisely in order to allow some applications to work properly. [ Loli-Queru Eugenia http://www.osnews.com/story/227 Interview with WINE&apos;s Alexandre Julliard 29 October 2001 OSnews 30 June 2008 Usually we start from whatever documentation is available, implement a first version of the function, and then as we find problems with applications that call this function we fix the behavior until it is what the application expects, which is usually quite far from what the documentation states. ] Consequently, the Wine team has reverse-engineered many function calls and file formats in such areas as thunk ing. [ October 2011 ] More recently some developers have suggested enhanced tactics such as examining the sources of extant free and open-source software. The Wine project originally released Wine under the same MIT License as the X Window System, but owing to concern about proprietary versions of Wine not contributing their changes back to the core project, [ http://www.winehq.org/pipermail/wine-devel/2002-February/003912.html Wine license change Jeremy White 6 February 2002 27 April 2010 ] work as of March 2002 has used the LGPL for its licensing. [ http://www.winehq.org/pipermail/wine-devel/2002-February/004487.html License change vote results Alexandre Julliard 18 February 2002 27 April 2010 ] Wine officially entered beta with version 0.9 on 25 October 2005. [ http://www.winehq.org/news/2005102502 Beta! 25 October 2005 9 December 2010 ] Version 1.0 was released on 17 June 2008, [ http://winehq.org/announce/1.0 Announcement of version 1.0 Wine HQ 17 June 2008 1 September 2008 ] after 15 years of development. Version 1.2 was released on 16 July 2010. [ http://www.winehq.org/news/2010071601 Release News Alexandre Julliard 16 July 2010 ] Development versions are released roughly every two weeks. Version 1.4 was released on 7 March 2012. [ http://www.winehq.org/announce/1.4 Wine Announcement 7 March 2012 ] The 1.4 release provides many improvements, such as the following (as quoted from the Wine HQ website) : &quot; This release represents 20 months of development effort and over 16,000 individual changes. The main highlights are the new DIB graphics engine, a redesigned audio stack, and full support for bidirectional text and character shaping. It also contains a lot of improvements across the board, as well as support for many new applications, notably Microsoft Office 2010. &quot; [ Corporate sponsorship ] The main corporate sponsor of Wine is CodeWeavers, which employs Julliard and many other Wine developers to work on Wine and on CrossOver, CodeWeavers&apos; supported version of Wine. Crossover includes some application-specific tweaks not considered suitable for the WineHQ version, as well as some additional proprietary components. [ Jeremy White http://www.codeweavers.com/support/forums/announce/?t%3D24%3Bmhl%3D100155%3Bmsg%3D100155#msg100155 Announcing CrossOver 10.0 and CrossOver Games 10.0, The Impersonator Codeweavers.com 27 January 2011 28 January 2011 ] The involvement of Corel for a time assisted the project, chiefly by employing Julliard and others to work on it. Corel had an interest in porting WordPerfect Office, its office suite, to Linux (especially Corel Linux ). Corel later cancelled all Linux-related projects after Microsoft made major investments in Corel, stopping their Wine effort. [ Steven J. Vaughan-Nichols http://www.linux.com/archive/feature/21411 That&apos;s All Folks: Corel Leaves Open Source Behind Linux.com 25 February 2002 3 January 2009 ] Other corporate sponsors include Google, which hired CodeWeavers to fix Wine so Picasa ran well enough to be ported directly to Linux using the same binary as on Windows; Google later paid for improvements to Wine&apos;s support for Adobe Photoshop CS2. Wine is also a regular beneficiary of Google&apos;s Summer of Code program. [ Kegel Dan http://article.gmane.org/gmane.comp.emulators.wine.devel/56872 Google&apos;s support for Wine in 2007 14 February 2008 wine-devel 3 January 2009 ] [ http://code.google.com/opensource/wine.html Open Source Patches: Wine Google 7 September 2008 ] [ Architecture ] { ClamWin GUI } Wine implements the Windows API entirely in user space, rather than as a kernel module. Services normally provided by the kernel in Windows { See the &quot; } { Windows service &quot; article } are provided by a daemon known as the wineserver, whose task is to implement basic Windows functionality, as well as integration with the X Window System, and translation of signals into native Windows exceptions. Although Wine implements some aspects of the Windows kernel, it is not possible to use native Windows drivers with it, due to Wine&apos;s underlying architecture. This prevents certain applications from working, such as some copy-protected titles. [ August 2011 A &quot; title &quot; is a computer software? ] Wine is primarily developed for Linux, but the Mac OS X, FreeBSD, and Solaris ports are currently (as of January 2009) well maintained. [ http://www.winehq.org/site/docs/wine-faq/index#UNDER-WHAT-PLATFORMS-WILL-WINE-RUN Under what hardware platform(s) and operating system(s) will Wine(Lib) run? Wine FAQ 3 January 2009 ] [ October 2011 ] Wine is also available for OpenBSD and NetBSD, through OpenBSD Ports [ http://openports.se/emulators/wine OpenBSD Ports: emulators/wine Openports.se 27 April 2010 ] and NetBSD pkgsrc, respectively. Since October 2010, Wine also works on the ARM platform when used as Winelib (which lets developers compile Windows code on Linux using Wine as a library). [ http://www.winehq.org/announce/1.3.4 The Wine development release 1.3.4 announcement Winehq.org 15 October 2010 ] Some versions of Wine&apos;s DLLs are available for Microsoft Windows, [ http://sourceforge.net/project/showfiles.php?group_id%3D6241%26amp%3Bpackage_id%3D112520 Wine Win32 Packages Sourceforge.net 17 October 2010 ] but Wine does not fully compile or run on Windows yet. [ http://wiki.winehq.org/WineOnWindows The Official Wine Wiki: Wine on Windows Wiki.winehq.org 27 April 2010 ] [ Functionality ] [[File:History Of WineAppDB.gif|thumb|300px|An animation showing progress in application compatibility according to test results from Wine AppDB (click on the picture to see the animation). [ #ececec Software that runs flawlessly ( &quot; Platinum &quot; ) ] [ #fff600 Software that runs flawlessly with configuration ( &quot; Gold &quot; ) ] [ #c0c0c0 Software with minor Issues ( &quot; Silver &quot; ) ] [ #fcba0a Software with major Issues ( &quot; Bronze &quot; ) ] [ #999966 Unusable software ( &quot; Garbage &quot; ) ] ]] The developers of the Direct3D portions of Wine have continued to implement new features such as pixel shaders to increase game support. [ http://wiki.winehq.org/DirectX-Shaders DirectX-Shaders Official Wine Wiki 3 January 2009 ] Wine can also use native DLLs directly, thus increasing functionality, but then a license for Windows is needed unless the DLLs were distributed with the application itself. winecfg is a GUI configuration utility included with Wine. Winecfg makes configuring Wine easier by making it unnecessary to edit the registry directly, although, if needed, this can be done with the included registry editor (similar to Windows regedit ). Wine also includes its own open-source implementations of several other Windows programs, such as notepad, wordpad, control, iexplore, and explorer. The Wine Application Database AppDB is a community-maintained database about which Windows applications work with Wine, and how well they work. [ Backward compatibility ] { 16-bit Windows game called &apos;&apos; } { Chip&apos;s Challenge &apos;&apos; on an } { x86-64 ( } { 64-bit ) computer. } A screenshot showing how Wine can be configured to mimic different versions of Windows, going as far back as Windows 2.0 as shown. Wine ensures good backward compatibility with legacy Windows applications, including those written for Windows 3.1. [ http://media.codeweavers.com/pub/crossover/case_studies/WinLegacySupport.pdf Windows Legacy Application Support Under Wine 9 December 2010 ] Wine can mimic different Windows versions required for some programs, going as far back as Windows version 2.0. [ http://www.maximumpc.com/article/still_need_to_run_windows_apps_have_a_glass_of_wine Still need to run Windows apps? Have a glass of wine Robert Strohmeyer 6 April 2007 9 December 2010 ] However, Windows 1.x and Windows 2.x support was removed from Wine development version 1.3.12 if DOSBox is installed on the system [ April 2012 ] (see below on MS-DOS ). You can nevertheless select &quot; Windows 2.0 &quot; as the Windows version you want to emulate, but Wine still won&apos;t run Windows 2.0 programs. Backward compatibility in Wine is superior to that of Windows, as newer versions of Windows can force users to upgrade legacy Windows applications. In many cases, Wine can offer better legacy support than newer versions of Windows with &quot; Compatibility Mode &quot;. As illustrated by screenshot on the left, Wine can run 16-bit Windows programs on a 64-bit operating system, which uses an x86-64 (64-bit) CPU. 64-bit versions of Microsoft Windows cannot run 16-bit Windows programs. [ http://www.windowsitpro.com/article/performance/why-can-t-i-install-16-bit-programs-on-a-computer-running-the-64-bit-version-of-windows-xp-.aspx Why can&apos;t I install 16-bit programs on a computer running the 64-bit version of Windows XP? John Savill 11 February 2002 9 December 2010 ] Wine partially supports Windows console application s, and the user can choose which backend to use to manage the console (choices include [ http://www.winehq.org/docs/wineusr-guide/cui-programs Text mode programs (CUI: Console User Interface) Wine User Guide 22 May 2010 ] raw streams, curses, and user32 ). When using the raw streams or curses backends, Windows applications will run in a Unix terminal. [ 64-bit applications ] [ October 2010 ] Preliminary support for 64-bit Windows applications was added to Wine 1.1.10, in December 2008. [ Maarten Lankhorst http://www.winehq.org/pipermail/wine-devel/2008-December/070941.html Wine64 hello world app runs! 5 December 2008 wine-devel 15 December 2008 ] This currently requires at least gcc version 4.4, and the Wine developers expect that it will take significant time before support stabilizes. However, as almost all Windows applications are [ 2010 currently ] available in 32-bit versions, and the 32-bit version of Wine can run on 64-bit platforms, this is seen as a non-issue. The 64-bit port of Wine also has preliminary WoW64 support ( [ 2010 April on ] ), which allows both 32-bit and 64-bit Windows applications to run inside the same Wine instance. [ http://wiki.winehq.org/Wine64ForPackagers Wine64 for packagers Official Wine Wiki 20 April 2010 ] [ Third-party applications ] { Pegasus Mail running via Wine, version 1.1.42. (The } { font smoothing is enabled by using } { winetricks. You can see the smooth fonts in the picture when it&apos;s viewed at full size.) } Some applications require more tweaking than simply installing the application in order to work properly, such as manually configuring Wine to use certain Windows DLLs. The Wine project does not integrate such workaround s into the Wine codebase, instead preferring to focus solely on improving Wine&apos;s implementation of the Windows API. While this approach focuses Wine development on long-term compatibility, it makes it difficult for users to run applications that require workarounds. Consequently, many third-party applications have been created to ease the use of those applications that don&apos;t work out of the box within Wine itself. The Wine wiki maintains a page of current and obsolete third-party applications. [ http://wiki.winehq.org/ThirdPartyApplications Third Party Applications Official Wine Wiki 3 January 2009 ] [ http://openindiana.org/pipermail/openindiana-discuss/2010-October/thread.html#544 OpenIndiana Bordeaux announcement OpenIndiana-announce mailing list 1 October 2010 ] [ http://www.bordeauxgroup.com/press-release/bordeaux-openindiana Bordeaux group press release Bordeaux group site 1 October 2010 ] [ http://wiki.winehq.org/winetricks winetricks Official Wine Wiki 3 January 2009 ] [ http://www.wine-doors.org/ Wine doors Wine doors 27 April 2010 ] [ http://www.tatanka.com.br/ IEs4Linux Tatanka.com.br 27 April 2010 ] [ http://wineskin.doh123.com/ Wineskin ] CrossOver, proprietary software Bordeaux is a proprietary Wine GUI configuration manager that runs winelib applications. It also supports installation of third-party utilities, installation of applications and games, and the ability to use custom configurations. Bordeaux currently runs on Linux, FreeBSD, PC-BSD, Solaris, OpenSolaris, OpenIndiana, and Mac OS X computers. Winetricks is a script to install some basic components (typically Microsoft DLLs and fonts) required for some applications to run correctly under Wine. The Wine project will accept bug reports for users of Winetricks, unlike most third-party applications. It is maintained by Wine developer Dan Kegel. QT4Wine is an open Gui for advanced setup of Wine. Wine-Doors is an application-management tool for the GNOME desktop which adds functionality to Wine. Wine-Doors is an alternative to WineTools which aims to improve upon WineTools&apos; features and extend on the original idea with a more modern design approach. IEs4Linux is a utility to install all versions of Internet Explorer, including versions 4 to 6 and version 7 (in beta). PlayOnLinux is an application to ease the installation of Windows applications (primarily games). There is also a corresponding Macintosh version called PlayOnMac Wineskin is a utility to manage Wine engine versions and create wrappers for OS X. [ Windows CE ] Wine will not run Windows CE programs. There is an ongoing project to port Wine to ARM processors, which may in the future be used as a base for a WineCE running Windows CE programs. [ http://wiki.winehq.org/ARM ARM support The Official Wine Wiki 20 August 2011 ] [ MS-DOS ] Early versions of Microsoft Windows run on top of MS-DOS and Windows programs may depend on MS-DOS programs being runnable. Wine does not have good support for MS-DOS, but starting with development version 1.3.12, Wine tries running MS-DOS programs in DOSBox if DOSBox is available on the system. However, due to a bug, current versions of Wine incorrectly identify Windows 1.x and Windows 2.x programs as MS-DOS programs, attempting to run them in DOSBox (which does not work). [ Other versions of Wine ] The core Wine development aims at a correct implementation of the Windows API as a whole and has sometimes lagged in some areas of compatibility with certain applications. Direct3D, for example, remained unimplemented until 1998, [ Brian Vincent http://www.winehq.com/?issue%3D208 WineConf 2004 Summary 3 February 2004 208 Wine Weekly News WineHQ.org 3 January 2009 ] although newer releases have had an increasingly complete implementation. [ http://www.winehq.org/status/directx Wine Status - DirectX DLLs WineHQ.org 3 January 2009 ] CodeWeavers markets CrossOver specifically for running Microsoft Office and other major Windows applications, including some games. CodeWeavers employs Alexandre Julliard to work on Wine and contributes most of its code to the Wine project under the LGPL. CodeWeavers also released a new version called Crossover Mac for Intel-based Apple Macintosh computers on 10 January 2007. [ http://linux.slashdot.org/article.pl?sid%3D07%2F01%2F10%2F1924235 CodeWeavers Releases CrossOver 6 for Mac and Linux Slashdot 3 January 2009 ] CrossOver includes now the functionality of both the CrossOver Games and CrossOver Pro lines therefore CrossOver Games and CrossOver Pro are no longer available as single products. [ http://www.codeweavers.com/products/faq/change_log/ CrossOver - Change Log - CodeWeavers 2012-03-09 ] CrossOver Games was optimized for running Windows video game s. Unlike CrossOver, it didn&apos;t focus on providing the most stable version of Wine. Instead, experimental features are provided to support newer games. [ http://www.codeweavers.com/products/cxgames/ Crossover Games site Codeweavers.com 6 January 1990 27 April 2010 ] TransGaming Technologies produced the proprietary Cedega software. Formerly known as WineX, Cedega represented a fork from the last MIT-licensed version of Wine in 2002. Much like Crossover Games, TransGaming&apos;s Cedega was targeted towards running Windows video games. On 7 January 2011, TransGaming Technologies announced continued development of Cedega Technology under the GameTree Developer Program. TransGaming Technologies allowed members to keep using their Cedega ID and password until 28 February 2011. [ https://gametreelinux.com GameTree Developer Program gametreelinux.com 2 January 2011 ] TransGaming has also produced Cider, a library for Apple–Intel architecture Macintoshes. Instead of being an end-user product, Cider (like Winelib) is a wrapper allowing developers to adapt their games to run natively on Intel Mac OS X without any changes in source code. The Russia n company Etersoft has been developing a proprietary version of Wine since 2006. WINE@Etersoft supports popular Russian applications (for example, 1C:Enterprise by 1C Company ). { Pcweek.ru } { 21 April 2010 } { 27 April 2010 } [ 2010 For 2010 ], Etersoft was going to issue WINE@Etersoft CAD, which is oriented towards CAD systems such as AutoCAD, Bricscad, and Compass-3D. Other projects using Wine source code include: [ http://www.reactos.org/en/dev_faq.html Developer FAQ ReactOS 25 May 2009 ] [ http://www.mail-archive.com/ros-diffs%40reactos.org/msg01658.html Creation of Arwinss branch Mail-archive.com 17 July 2009 27 April 2010 ] [ http://www.reactos.org/wiki/Arwinss Arwinss at ReactOS wiki Reactos.org 20 February 2010 27 April 2010 ] [ http://www.reactos.org/archives/public/ros-dev/2010-January/012709.html Arwinss presentation Reactos.org 27 April 2010 ] [ http://wineskin.doh123.com/FAQ.html Wineskin FAQ doh123 12 April 2011 ] ReactOS, a project to write an operating system compatible with Windows NT versions 5.x and up (which includes Windows 2000 and its successors) down to the device driver level. ReactOS uses Wine source code considerably, but because of architectural differences, ReactOS code (such as dlls written specifically for it, like ntdll, user32, kernel32, gdi32, and advapi) is not generally reused in Wine. In July 2009, Aleksey Bragin, the ReactOS project lead, started a new ReactOS branch called Arwinss, and it was officially announced in January 2010. Arwinss is an alternative implementation of the core Win32 components, and uses mostly unchanged versions of Wine&apos;s user32.dll and gdi32.dll. Linux Unified Kernel, a project intended to be binary-compatible with application software and device drivers made for Microsoft Windows and Linux. This kernel imports all the key features of the Windows operating system kernel into the Linux kernel to support both Linux and Windows applications and device drivers. Darwine, a port of the Wine libraries to Darwin and Mac OS X. Kronenberg.org stated &quot; As some might have read on Wine-Devel, Darwine is dead for good. The OS X port of Wine formerly known as Darwine is now Wine. &quot; Kronenberg continues work on an Intel Mac version called Winebottler Wineskin, an open source Wine GUI configuration manager for Mac OS X. Wineskin creates a wrapper around Wine in the form of a normal Mac Application. The wrapper can also be used to make a distributable “port” of software. Odin, a project to run Win32 binaries on OS/2 or convert them to OS/2 native format. The project also provides the Odin32 API to compile Win32 programs for OS/2. E/OS, a project attempting to allow any program designed for any operating system to be run without the need to actually install any other operating system. Rewind, a defunct MIT-licensed fork of the last MIT-licensed version of Wine. Parallels Desktop 3 for Mac, a proprietary product that uses some Wine code for its DirectX handling. VirtualBox v3.x, a virtual machine that uses some Wine code for its Direct3D handling. [ Reception ] The Wine project has received a number of technical and philosophical complaints and concerns over the years. [ Security ] Because of Wine&apos;s ability to run Windows binary code, concerns have been raised over native Windows viruses and malware affecting Unix-like operating systems. [ http://www.linux.com/archive/feature/42031 Running Windows viruses with Wine Matt Moen 26 January 2005 23 October 2009 ] Wine can run much malware, but programs running in Wine are confined to the current user&apos;s privileges, restricting some undesirable consequences. This is one reason Wine should never be run as the superuser. [ http://wiki.winehq.org/FAQ?action%3Drecall%26amp%3Brev%3D312#head-96bebfa287b4288974de0df23351f278b0d41014 Should I run Wine as root? Wine Wiki FAQ Official Wine Wiki 7 August 2009 24 August 2009 ] Malware research software such as ZeroWine [ http://zerowine.sourceforge.net/ ZeroWine project home page ] runs Wine on Linux in a virtual machine, to keep the malware completely isolated from the host system. Another security concern is when the implemented specifications are ill-designed and allow for security compromise. Because Wine implements these specs, it will also implement any security vulnerabilities they contain. [ Linux/BSD still exposed to WMF exploit through WINE! http://www.zdnet.com/blog/ou/linuxbsd-still-exposed-to-wmf-exploit-through-wine/146 ] [ Wine vs. native Unix applications ] A common concern about Wine is that its existence means that vendors are less likely to write native Linux, Mac OS X, and BSD applications. As an example of this, it is worth considering IBM&apos;s 1994 operating system, OS/2 Warp. An article describes the weaknesses of OS/2 which killed it, the first one being: [ http://pages.prodigy.net/michaln/history/os2warp/index.html OS/2 Warp history Michal Necasek ] The Wine project itself responds to these complaints on one of its Wiki pages: [ http://wiki.winehq.org/Debunking_Wine_Myths#head-9af2c83644754ac9805dc929403ca0440c96c383 Debunking Wine Myths Bernhard Rosenkraenzer ] Also, the Wine Wiki page claims that Wine can help break the chicken-and-egg problem for Linux on the desktop [ http://wiki.winehq.org/ImportanceOfWine Why Wine is so important 11 December 2011 ] : [ This brings us to the chicken and egg issue of Linux on the desktop. Until Linux can provide equivalents for the above applications, its market share on the desktop will stagnate. But until the market share of Linux on the desktop rises, no vendor will develop applications for Linux. How does one break this vicious circle? Again, Wine can provide an answer. By letting users reuse the Windows applications they have invested time and money in, Wine dramatically lowers the barrier that prevents users from switching to Linux. This then makes it possible for Linux to take off on the desktop, which increases its market share in that segment. In turn, this makes it viable for companies to produce Linux versions of their applications, and for new products to come out just for the Linux market. This reasoning could be dismissed easily if Wine was only capable of running Solitaire. However now it can run Microsoft Office, multimedia applications such as QuickTime and Windows Media Player, and even games such as Max Payne or Unreal Tournament 3. Almost any other complex application can be made to run well given a bit of time. And each time that work is done to add one application to this list, many other applications benefit from this work and become usable too. Have a look at our Application Database to get an idea on what can be run under Wine. ] The use of Wine for gaming has proved specifically controversial in the Linux community, as some feel it is preventing, or at least hindering, the further growth of native gaming on the platform. { Ports vs. Wine Gamespot (Article by James Hills) } { An Interview With A Linux Game Porter } { Phoronix, 3 July 2009 (Article by } { Michael Larabel ) } [ Microsoft and Wine ] Microsoft has generally not made public statements about Wine. However, the Microsoft Update software will block updates to Microsoft applications running in Wine. On 16 February 2005, Ivan Leo Puoti discovered that Microsoft had started checking the Windows registry for the Wine configuration key and would block the Windows Update for any component. Puoti wrote, &quot; It&apos;s... the first time they&apos;ve broken radio silence on the project. &quot; [ Ivan Leo Puoti http://winehq.com/hypermail/wine-devel/2005/02/0441.html http://linux.slashdot.org/story/05/02/17/1318212/microsoft-blocking-wine-users-from-downloads-site 17 February 2005 Microsoft genuine downloads looking for Wine 18 February 2005 wine-devel 23 January 2006 ] The Windows Genuine Advantage (WGA) system also checks for existence of Wine registry keys. The WGA FAQ states that WGA will not run in Wine by design, as Wine does not constitute &quot; genuine Windows &quot;. [ http://www.microsoft.com/genuine/downloads/FAQ.aspx Genuine Windows FAQ Microsoft Corporation 30 January 2006 ] When WGA validation detects Wine running on the system, it will notify users that they are running non-genuine Windows and disallow genuine Windows downloads for that system. Despite this, some reports have circulated of the WGA system working in Wine, [ http://linux.slashdot.org/article.pl?sid%3D07%2F06%2F18%2F0037223 Ubuntu Linux Validates as Genuine Windows Slashdot 3 January 2009 ] [ http://forums.bit-tech.net/showthread.php?t%3D95654 WGA running in Wine 3 January 2009 ] although this loophole has now been closed with the next WGA component update. In the case of Internet Explorer 7, Microsoft has since removed the WGA requirements. [ Foley Mary-Jo Internet Explorer 7 update: Now WGA-free http://www.zdnet.com/blog/microsoft/internet-explorer-7-update-now-wga-free/788 30 June 2011 ZDNet CBS Interactive 4 October 2007 ] [ See also ] [ Free software ] Executor (software) ReactOS Windows Interface Source Environment PlayOnLinux [ References ] [ 30em ] [ Further reading ] Jeremy White&apos;s Wine Answers - Slashdot interview with Jeremy White of CodeWeavers Jeremy White interview on the &quot; Mad Penguin &quot; web-site Appointment of the Software Freedom Law Center as legal counsel to represent the Wine project Wine: Where it came from, how to use it, where it&apos;s going - a work by Dan Kegel [ External links ] [ Wine (software) ] [ wine Wine ] [ wine ] Wine Development HQ - the official homepage of Wine WineBottler - A Wine program for Mac OS X [ February 2011 ] Category:Compatibility layers Category:Computing platforms Category:Cross-platform software Category:Free system software Category:Free software programmed in C Category:1993 software Category:Acronyms af:Wine ar:واين (برنامج) bn:ওয়াইন (সফটওয়্যার) bs:Wine ca:Wine cv:Wine cs:Wine da:Wine de:Wine et:Wine es:Wine eo:Wine eu:Wine fa:واین (نرم‌افزار) fr:Wine ko:와인 (소프트웨어) id:Wine (perangkat lunak) ia:WINE is:Wine it:Wine he:Wine lt:Wine hu:WINE ml:വൈന്‍ (സോഫ്റ്റ്‌വെയര്‍) nl:Wine ja:Wine no:Wine pl:Wine pt:Wine ru:Wine simple:Wine (software) sk:Wine sl:Wine sr:Vajn fi:Wine sv:Wine tr:Wine uk:Wine vi:Wine (phần mềm) zh:Wine
[ May 2012 ] In computer systems security, role-based access control (RBAC) [ Ferraiolo, D.F. and Kuhn, D.R. Role-Based Access Control 15th National Computer Security Conference 1992 October 554–563 http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-92.pdf PDF ] [ Sandhu, R., Coyne, E.J., Feinstein, H.L. and Youman, C.E. Role-Based Access Control Models IEEE Computer 29 2 1996 August 38–47 IEEE Press http://csrc.nist.gov/rbac/sandhu96.pdf PDF ] is an approach to restricting system access to authorized users. It is used by the majority of enterprises with more than 500 employees, [ A.C. O&apos;Connor and R.J. Loomis Economic Analysis of Role-Based Access Control 2010 December PDF Research Triangle Institute http://csrc.nist.gov/groups/SNS/rbac/documents/20101219_RBAC2_Final_Report.pdf ] and can implement mandatory access control (MAC) or discretionary access control (DAC). RBAC is sometimes referred to as role-based security. [ Design ] Within an organization, role s are created for various job functions. The permissions to perform certain operations are assigned to specific roles. Members of staff (or other system users) are assigned particular roles, and through those role assignments acquire the computer permissions to perform particular computer-system functions. Since users are not assigned permissions directly, but only acquire them through their role (or roles), management of individual user rights becomes a matter of simply assigning appropriate roles to the user&apos;s account; this simplifies common operations, such as adding a user, or changing a user&apos;s department. Three primary rules are defined for RBAC: Role assignment: A subject can exercise a permission only if the subject has selected or been assigned a role. Role authorization: A subject&apos;s active role must be authorized for the subject. With rule 1 above, this rule ensures that users can take on only roles for which they are authorized. Permission authorization: A subject can exercise a permission only if the permission is authorized for the subject&apos;s active role. With rules 1 and 2, this rule ensures that users can exercise only permissions for which they are authorized. Additional constraints may be applied as well, and roles can be combined in a hierarchy where higher-level roles subsume permissions owned by sub-roles. With the concepts of role hierarchy and constraints, one can control RBAC to create or simulate lattice-based access control (LBAC). Thus RBAC can be considered to be a superset of LBAC. When defining an RBAC model, the following conventions are useful: A subject can have multiple roles. A role can have multiple subjects. A role can have many permissions. A permission can be assigned to many roles. An operation can be assigned many permissions. A permission can be assigned to many operations. A constraint places a restrictive rule on the potential inheritance of permissions from opposing roles, thus it can be used to achieve appropriate separation of duties. For example, the same person should not be allowed to both create a login account and to authorize the account creation. Thus, using set theory notation : PA \subseteq P \times R and is a many to many permission to role assignment relation. SA \subseteq S \times R and is a many to many subject to role assignment relation. RH \subseteq R \times R A subject may have multiple simultaneous sessions with different permissions. RBAC [ Relation to other models ] RBAC is a flexible access control technology whose flexibility allows it to implement DAC [ Ravi Sandhu, Qamar Munawer How to do discretionary access control using roles 3rd ACM Workshop on Role-Based Access Control 1998 October 47–54 ] or MAC. [ Sylvia Osborn, Ravi Sandhu, and Qamar Munawer Configuring role-based access control to enforce mandatory and discretionary access control policies ACM Transactions on Information and System Security (TISSEC) 2000 85–106 ] MAC can simulate RBAC if the role graph is restricted to a tree rather than a partially ordered set. [ D.R. Kuhn Role Based Access Control on MLS Systems Without Kernel Changes Third ACM Workshop on Role Based Access Control 1998 25–32 http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-98.pdf PDF ] Prior to the development of RBAC, the Bell-LaPadula model (BLP) model was synonymous with MAC and file system permissions were synonymous with DAC. These were considered to be the only known models for access control: if a model was not BLP, it was considered to be a DAC model, and vice versa. Research in the late 1990s demonstrated that RBAC falls in neither category. { National Institute of Standards and Technology FAQ on RBAC models and standards } { David Ferraiolo and Richard Kuhn } Unlike context-based access control (CBAC), RBAC does not look at the message context (such as a connection&apos;s source). RBAC has also been critized for leading to role explosion [ A. A. Elliott and G. S. Knight Role Explosion: Acknowledging the Problem Proceedings of the 2010 International Conference on Software Engineering Research &amp; Practice 2010 http://knight.segfaults.net/papers/20100502%20-%20Aaron%20Elliott%20-%20WOLRDCOMP%202010%20Paper.pdf PDF ], a problem in large enterprise systems which require access control of finer granularity than what RBAC can provide as roles are inherently assigned to operations and data types. In resemblance to CBAC, an Entity-Relationship Based Access Control (ERBAC, although the same acronym is also used for modified RBAC systems, such as Extended Role-Based Access Control { Dr. Bhavani Thuraisingham and Srinivasan Iyer (PPT) } ) system is able to secure instances of data by considering their association to the executing subject. { Kalle Korhonen: tapestry-security-jpa, a JPA/Tapestry 5 specific implementation of the ERBAC concept } RBAC differs from access control lists (ACLs), used in traditional discretionary access-control systems, in that it assigns permissions to specific operations with meaning in the organization, rather than to low level data objects. For example, an access control list could be used to grant or deny write access to a particular system file, but it would not dictate how that file could be changed. In an RBAC-based system, an operation might be to &apos;create a credit account&apos; transaction in a financial application or to &apos;populate a blood sugar level test&apos; record in a medical application. The assignment of permission to perform a particular operation is meaningful, because the operations are granular with meaning within the application. RBAC has been shown to be particularly well suited to separation of duties (SoD) requirements, which ensure that two or more people must be involved in authorizing critical operations. Necessary and sufficient conditions for safety of SoD in RBAC have been analyzed. An underlying principle of SoD is that no individual should be able to effect a breach of security through dual privilege. By extension, no person may hold a role that exercises audit, control or review authority over another, concurrently held role. [ D.R. Kuhn Mutual Exclusion of Roles as a Means of Implementing Separation of Duty in Role-Based Access Control Systems 2nd ACM Workshop Role-Based Access Control 1997 23–30 PDF http://csrc.nist.gov/groups/SNS/rbac/documents/design_implementation/kuhn-97.pdf ] [ Ninghui Li, Ziad Bizri, and Mahesh V. Tripunitara. Tripunitara On mutually exclusive roles and separation-of-duty, 11th ACM conference on Computer and Communications Security 2004 42–51 PDF http://portal.acm.org/citation.cfm?id%3D1030091 ] [ Use and availability ] The use of RBAC to manage user privileges (computer permissions) within a single system or application is widely accepted as a best practice. Systems including Microsoft Active Directory, Microsoft SQL Server, SELinux, grsecurity, FreeBSD, Solaris, Oracle DBMS, PostgreSQL 8.1, SAP R/3, ISIS Papyrus, FusionForge and many others effectively implement some form of RBAC. A 2010 report prepared for NIST by the Research Triangle Institute analyzed the economic value of RBAC for enterprises, and estimated benefits per employee from reduced employee downtime, more efficient provisioning, and more efficient access control policy administration. In an organization with a heterogeneous IT infrastructure and requirements that span dozens or hundreds of systems and applications, using RBAC to manage sufficient roles and assign adequate role memberships becomes extremely complex without hierarchical creation of roles and privilege assignments. { Beyond Roles: A Practical Approach to Enterprise User Provisioning } Newer systems extend the older NIST RBAC model [ Sandhu, R., Ferraiolo, D.F. and Kuhn, D.R. The NIST Model for Role-Based Access Control: Toward a Unified Standard 5th ACM Workshop Role-Based Access Control 2000 July 47–63 PDF http://csrc.nist.gov/rbac/sandhu-ferraiolo-kuhn-00.pdf ] to address the limitations of RBAC for enterprise-wide deployments. Several academic papers exist. The NIST model was adopted as a standard by INCITS as ANSI/INCITS 359-2004. A discussion of some of the design choices for the NIST model has also been published. [ Ferraiolo, D.F., Kuhn, D.R., and Sandhu, R. RBAC Standard Rationale: comments on a Critique of the ANSI Standard on Role-Based Access Control IEEE Security &amp; Privacy 5 6 2007 Nov/Dec 51–53 IEEE Press http://csrc.nist.gov/groups/SNS/rbac/documents/ferraiolo-kuhn-sandhu-07.pdf PDF 10.1109/MSP.2007.173 ] [ See also ] [ May 2012 ] AGDLP Authentication Blind credential Chinese wall Covert channel Discretionary access control grsecurity Identity Driven Networking Lattice-based access control NIST RBAC model PERMIS Security classification Security label Sudo XACML [ References ] [ 30em ] [ External links ] FAQ on RBAC models and standards Role Based Access Controls at NIST XACML core and hierarchical role based access control profile Institute for Cyber Security at the University of Texas San Antonio Trustifier RoBAC/RuBAC overview Practical experiences in implementing RBAC Role-based approach to Active Directory delegation Category:Computer security models Category:Access control de:Role Based Access Control fa:محدود کردن دسترسی بر اساس نقش fr:Contrôle d&apos;accès à base de rôles it:Role-based access control nl:Role-based access control ja:ロールベースアクセス制御 pl:Role-based access control ru:Управление доступом на основе ролей vi:Điều khiển truy cập trên cơ sở vai trò zh:以角色為基礎的存取控制
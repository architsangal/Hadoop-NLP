Software development (also known as application development, software design, designing software, software application development, enterprise application development, or platform development { http://www.bitpipe.com/tlist/Application-Development.html } ) is the development of a software product. The term &quot; software development &quot; may be used to refer to the activity of computer programming, which is the process of writing and maintaining the source code, but in a broader sense of the term it includes all that is involved between the conception of the desired software through to the final manifestation of the software, ideally in a planned and structured process. { http://www.bestpricecomputers.co.uk/glossary/application-development.htm } Therefore, software development may include research, new development, prototyping, modification, reuse, re-engineering, maintenance, or any other activities that result in software products. [ DRM Associates New Product Development Glossary http://www.npd-solutions.com/glossary.html 2002 2006-10-29 ] Software can be developed for a variety of purposes, the three most common being to meet specific needs of a specific client/business (the case with custom software ), to meet a perceived need of some set of potential users (the case with commercial and open source software ), or for personal use (e.g. a scientist may write software to automate a mundane task). Embedded software development, that is, the development of embedded software such as used for controlling consumer products, requires the development process to be integrated with the development of the controlled physical product. The need for better quality control of the software development process has given rise to the discipline of software engineering, which aims to apply the systematic approach exemplified in the engineering paradigm to the process of software development. [ Overview ] [ August 2010 ] There are several different approaches to software development, much like the various views of political parties toward governing a country. Some take a more structured, engineering-based approach to developing business solutions, whereas others may take a more incremental approach, where software evolves as it is developed piece-by-piece. Most methodologies share some combination of the following stages of software development: Market research Gathering requirements for the proposed business solution Analyzing the problem Devising a plan or design for the software-based solution Implementation (coding) of the software Testing the software Deployment Maintenance and bug fixing These stages are often referred to collectively as the software development lifecycle, or SDLC. Different approaches to software development may carry out these stages in different orders, or devote more or less time to different stages. The level of detail of the documentation produced at each stage of software development may also vary. These stages may also be carried out in turn (a “waterfall” based approach), or they may be repeated over various cycles or iterations (a more &quot; extreme &quot; approach). The more extreme approach usually involves less time spent on planning and documentation, and more time spent on coding and development of automated tests. More “extreme” approaches also promote continuous testing throughout the development lifecycle, as well as having a working (or bug-free) product at all times. More structured or “waterfall” based approaches attempt to assess the majority of risks and develop a detailed plan for the software before implementation (coding) begins, and avoid significant design changes and re-coding in later stages of the software development lifecycle planning. There are significant advantages and disadvantages to the various methodologies, and the best approach to solving a problem using software will often depend on the type of problem. If the problem is well understood and a solution can be effectively planned out ahead of time, the more &quot; waterfall &quot; based approach may work the best. If, on the other hand, the problem is unique (at least to the development team) and the structure of the software solution cannot be easily envisioned, then a more &quot; extreme &quot; incremental approach may work best.A software development process is a structure imposed on the development of a software product. Synonyms include software life cycle and software process. There are several models for such processes, each describing approaches to a variety of tasks or activities that take place during the process. [ Consistency in Software ] In order to ensure that software can evolve in a way that maintains its inherent multidimensionality, one must ensure that the different dimensions evolve together in a consistent manner. Software has too many dimensions to combine within a single framework. A good mechanism should not be geared to a specific problem such as ensuring the consistency of a UML class diagram with the source code. Instead it should be flexible enough to handle the broad range of dimensions that are actually involved in software development. { Steven P,Reiss. Consistent software Evolution mandatory,. } [ Software development topic ] [ Marketing ] The sources of ideas for software products are legion. { Joseph M. Morris (2001). Software Industry Accounting. p.1.10 } These ideas can come from market research including the demographics of potential new customers, existing customers, sales prospects who rejected the product, other internal software development staff, or a creative third party. Ideas for software products are usually first evaluated by marketing personnel for economic feasibility, for fit with existing channels distribution, for possible effects on existing product lines, required features, and for fit with the company&apos;s marketing objectives. In a marketing evaluation phase, the cost and time assumptions become evaluated. A decision is reached early in the first phase as to whether, based on the more detailed information generated by the marketing and development staff, the project should be pursued further. Pranay. In the book &quot; Great Software Debates &quot;, Alan M. Davis states in the chapter &quot; Requirements &quot;, subchapter &quot; The Missing Piece of Software Development &quot; [ Students of engineering learn engineering and are rarely exposed to finance or marketing. Students of marketing learn marketing and are rarely exposed to finance or engineering. Most of us become specialists in just one area. To complicate matters, few of us meet interdisciplinary people in the workforce, so there are few roles to mimic. Yet, software product planning is critical to the development success and absolutely requires knowledge of multiple disciplines. Alan M. Davis. Great Software Debates (October 8, 2004), pp:125-128 Wiley-IEEE Computer Society Press ] Because software development may involve compromising or going beyond what is required by the client, a software development project may stray into less technical concerns such as human resources, risk management, intellectual property, budgeting, crisis management, etc. These processes may also cause the role of business development to overlap with software development. [ Software development methodology ] A software development methodology is a framework that is used to structure, plan, and control the process of developing information system s. A wide variety of such frameworks have evolved over the years, each with its own recognized strengths and weaknesses. One system development methodology is not necessarily suitable for use by all projects. Each of the available methodologies is best suited to specific kinds of projects, based on various technical, organizational, project and team considerations. { Selecting a development approach. Revalidated: March 27, 2008. Retrieved 27 Oct 2008. } [ See also ] Application software Aspect-Oriented Software Development Bachelor of Science in Information Technology Bus factor Capability Maturity Model Computer programmer Consulting software engineer Custom software Functional specification Incremental funding methodology Marketing strategies for product software Offshore software development Search Based Software Engineering Service-Oriented Modeling Framework Software blueprint Software design Software developer Software development effort estimation Software development process Software engineer Software industry Software project management Software publisher System software User experience Video game development Web application development [ References ] [ Steven P,Reiss Consistent software Evolution, Department of Computer Science Brown University 2001 ] [ Further reading ] [ Software development ] Jim McCarthy (1995). Dynamics of Software Development. Dan Conde (2002). Software Product Management: Managing Software Development from Idea to Product to Marketing to Sales. A.M. Davis (2005). Just enough requirements management: where software development meets marketing. Edward Hasted. (2005). Software That Sells : A Practical Guide to Developing and Marketing Your Software Project. Luke Hohmann (2003). Beyond Software Architecture: Creating and Sustaining Winning Solutions. John W. Horch (2005). &quot; Two Orientations On How To Work With Objects. &quot; In: IEEE Software. vol. 12, no. 2, pp.  117–118, Mar., 1995. John Rittinghouse (2003). Managing Software Deliverables: A Software Development Management Methodology. Karl E. Wiegers (2005). More About Software Requirements: Thorny Issues and Practical Advice. Robert K. Wysocki (2006). Effective Software Project Management. * Category:Marketing Category:Software project management Category:Project management Category:Computer occupations Category:Product development ar:تطوير البرمجيات (علم حاسوب) bg:Разработка на софтуер ca:Desenvolupament de programari es:Desarrollo de software fa:توسعه نرم‌افزار fi:Ohjelmistokehitys fr:Développement de logiciel he:פיתוח תוכנה ja:ソフトウェア開発 kk:Бағдарламалық жасақтама дамыту ko:소프트웨어 개발 pt:Desenvolvimento de software ru:Разработка программного обеспечения sq:Zhvillimi i softuerit ta:மென்பொருள் மேம்பாடு vi:Phát triển phần mềm zh:软件开发
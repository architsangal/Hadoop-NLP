[ April 2010 ] In cryptography, a key is a piece of information (a parameter ) that determines the functional output of a cryptographic algorithm or cipher. Without a key, the algorithm would produce no useful result. In encryption, a key specifies the particular transformation of plaintext into ciphertext, or vice versa during decryption. Keys are also used in other cryptographic algorithms, such as digital signature schemes and message authentication code s. [ Need for secrecy ] In designing security systems, it is wise to assume that the details of the cryptographic algorithm are already available to the attacker. This principle is known as Kerckhoffs&apos; principle — &quot; only secrecy of the key provides security &quot;, or, reformulated as Shannon&apos;s maxim, &quot; the enemy knows the system &quot;. The history of cryptography provides evidence that it can be difficult to keep the details of a widely used algorithm secret (see security through obscurity ). A key is often easier to protect (it&apos;s typically a small piece of information) than an encryption algorithm, and easier to change if compromised. Thus, the security of an encryption system in most cases relies on some key being kept secret. Keeping keys secret is one of the most difficult problems in practical cryptography; see key management. An attacker who obtains the key (by, for example, theft, extortion, dumpster diving or social engineering ) can recover the original message from the encrypted data. Encryption algorithms which use the same key for both encryption and decryption are known as symmetric key algorithm s. A newer class of &quot; public key &quot; cryptographic algorithms was invented in the 1970s which uses a pair of keys, one to encrypt and one to decrypt. These asymmetric key algorithm s allow one key to be made public while retaining the private key in only one location. They are designed so that finding out the private key is extremely difficult, even if the corresponding public key is known. A user of public key technology can publish their public key, while keeping their private key secret, allowing anyone to send them an encrypted message. [ Key sizes ] [ Key size ] For the one-time pad system the key must be at least as long as the message. In encryption systems that use a cipher algorithm, messages can be much longer than the key. The key must, however, be long enough so that an attacker cannot try all possible combinations. A key length of 80 bits is generally considered the minimum for strong security with symmetric encryption algorithms. 128-bit keys are commonly used and considered very strong. See the key size article for a fuller discussion. The keys used in public key cryptography have some mathematical structure. For example, public keys used in the RSA system are the product of two prime numbers. Thus public key systems require longer key lengths than symmetric systems for an equivalent level of security. 3072 bits is the suggested key length for systems based on factoring and integer discrete logarithm s which aim to have security equivalent to a 128 bit symmetric cipher. Elliptic curve cryptography may allow smaller-size keys for equivalent security, but these algorithms have only been known for a relatively short time and current estimates of the difficulty of searching for their keys may not survive. As of 2004, a message encrypted using a 109-bit key elliptic curve algorithm had been broken by brute force. { The Internet Encyclopedia, by Hossein Bidgoli, John Wiley, 2004, ISBN 0-471-22201-1, p. 567 } The current rule of thumb is to use an ECC key twice as long as the symmetric key security level desired. Except for the random one-time pad, the security of these systems has not ( [ 2008 on ] ) been proven mathematically, so a theoretical breakthrough could make everything one has encrypted an open book. This is another reason to err on the side of choosing longer keys. [ Key choice ] To prevent a key from being guessed, keys need to be generated truly random ly and contain sufficient entropy. The problem of how to safely generate truly random keys is difficult, and has been addressed in many ways by various cryptographic systems. There is a RFC on generating randomness (RFC 1750, Randomness Recommendations for Security). Some operating systems include tools for &quot; collecting &quot; entropy from the timing of unpredictable operations such as disk drive head movements. For the production of small amounts of keying material, ordinary dice provide a good source of high quality randomness. When a password (or passphrase ) is used as an encryption key, well-designed cryptosystems first run it through a key derivation function which adds a salt and compresses or expands it to the key length desired, for example by compressing a long phrase into a 128-bit value suitable for use in a block cipher. [ See also ] [ 2 ] Cryptographic key types classification according to their usage Diceware describes a method of generating fairly easy-to-remember, yet fairly secure, passphrases, using only dice and a pencil. EKMS Keyed hash algorithm Key authentication Key derivation function Key distribution center Key escrow Key exchange Key generation Key management Key schedule Key server Key signature (cryptography) Key signing party Key stretching Key-agreement protocol glossary of concepts related to keys Password psychology Public key fingerprint Random number generator Self-certifying key Session key Tripcode Machine-readable paper key Weak key [ References ] { Category:Cryptography } Category:Key management bg:Ключ (криптография) ca:Clau (criptografia) cs:Šifrovací klíč da:Nøgle (kryptologi) de:Schlüssel (Kryptologie) es:Clave (criptografía) eo:Elĉifrigilo fa:کلید رمز fr:Clé de chiffrement id:Kunci (kriptografi) it:Chiave (crittografia) he:מפתח (קריפטוגרפיה) ka:გასაღები (კრიპტოგრაფია) kk:Кілт nl:Sleutel (cryptografie) ja:鍵 (暗号) no:Krypteringsnøkkel oc:Clau (criptografia) pl:Klucz (kryptografia) pt:Chave (criptografia) ro:Cheie (criptografie) ru:Ключ (криптография) simple:Key (cryptography) sv:Kryptonyckel uk:Ключ (криптографія) vi:Khóa (mật mã)
[ August 2009 ] Java Platform, Enterprise Edition or Java EE is Oracle&apos;s enterprise java computing platform. The platform provides an API and runtime environment for developing and running enterprise software, including network and web services, and other large-scale, multi-tiered, scalable, reliable, and secure network applications. Java EE extends the Java Platform, Standard Edition (Java SE) { http://docs.oracle.com/javaee/6/firstcup/doc/gkhoy.html }, providing an API for object-relational mapping, distributed and multi-tier architectures, and web services. The platform incorporates a design based largely on modular component s running on an application server. Software for Java EE is primarily developed in the Java programming language and uses XML for configuration. [ Nomenclature, standards, and specifications ] The platform was known as Java 2 Platform, Enterprise Edition or J2EE until the name was changed to Java EE in version 5. The current version is called Java EE 6. Java EE is defined by its specification. As with other Java Community Process specifications, providers must meet certain conformance requirements in order to declare their products as Java EE compliant. Java EE includes several API specifications, such as JDBC, RMI, e-mail, JMS, web service s, XML, etc., and defines how to coordinate them. Java EE also features some specifications unique to Java EE for components. These include Enterprise JavaBean s, Connectors, servlet s, JavaServer Pages and several web service technologies. This allows developers to create enterprise applications that are portable and scalable, and that integrate with legacy technologies. A Java EE application server can handle transactions, security, scalability, concurrency and management of the components that are deployed to it, in order to enable developers to concentrate more on the business logic of the components rather than on infrastructure and integration tasks. [ General APIs ] The Java EE APIs includes several technologies that extend the functionality of the base Java SE API s. Java EE 6 Platform Packages Java EE 5 Platform Packages [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.faces.* &lt; /tag &gt; &lt; arg &gt; javax/faces &lt; /arg &gt; &lt; /template &gt; ] This package defines the root of the JavaServer Faces (JSF) API. JSF is a technology for constructing user interfaces out of components [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.faces.component.* &lt; /tag &gt; &lt; arg &gt; javax/faces/component &lt; /arg &gt; &lt; /template &gt; ] This package defines the component part of the JavaServer Faces (JSF) API. Since JSF is primarily component oriented, this is one of the core packages. The package overview contains a UML diagram of the component hierarchy. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.servlet.* &lt; /tag &gt; &lt; arg &gt; javax/servlet &lt; /arg &gt; &lt; /template &gt; ] The servlet specification defines a set of APIs to service mainly HTTP requests. It includes the JavaServer Pages specification. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.enterprise.inject.* &lt; /tag &gt; &lt; arg &gt; javax/enterprise/inject &lt; /arg &gt; &lt; /template &gt; ] These packages define the injection annotations for the contexts and Dependency Injection (CDI) API. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.enterprise.context.* &lt; /tag &gt; &lt; arg &gt; javax/enterprise/context &lt; /arg &gt; &lt; /template &gt; ] These packages define the context annotations and interfaces for the Contexts and Dependency Injection (CDI) API. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.ejb.* &lt; /tag &gt; &lt; arg &gt; javax/ejb &lt; /arg &gt; &lt; /template &gt; ] The Enterprise JavaBean (EJB) specification defines a set of lightweight APIs that an object container (the EJB container) will support in order to provide transactions (using JTA ), remote procedure call s (using RMI or RMI-IIOP ), concurrency control, dependency injection and access control for business objects. This package contains the Enterprise JavaBeans classes and interfaces that define the contracts between the enterprise bean and its clients and between the enterprise bean and the ejb container. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.validation.* &lt; /tag &gt; &lt; arg &gt; javax/validation &lt; /arg &gt; &lt; /template &gt; ] This package contains the annotations and interfaces for the declarative validation support offered by the Bean Validation API. Bean Validation provides a unified way to provide constraints on beans (e.g. JPA model classes) that can be enforced cross-layer. In Java EE, JPA honors bean validation constraints in the persistence layer, while JSF does so in the view layer. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.persistence.* &lt; /tag &gt; &lt; arg &gt; javax/persistence &lt; /arg &gt; &lt; /template &gt; ] This package contains the classes and interfaces that define the contracts between a persistence provider and the managed classes and the clients of the Java Persistence API (JPA). [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.transaction.* &lt; /tag &gt; &lt; arg &gt; javax/transaction &lt; /arg &gt; &lt; /template &gt; ] This package provides the Java Transaction API (JTA) API that contains the interfaces to interact with the transaction support offered by Java EE. Even though this API abstracts from the really low-level details, it is itself also considered somewhat low-level and the average application developer in Java EE is assumed to be relying on transparent handling of transactions by the higher level EJB abstractions. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.jms.* &lt; /tag &gt; &lt; arg &gt; javax/jms &lt; /arg &gt; &lt; /template &gt; ] This package defines the Java Message Service (JMS) API. The JMS API provides a common way for Java programs to create, send, receive and read an enterprise messaging system&apos;s messages. [ &lt; template type= &quot; Javadoc:EE &quot; &gt; &lt; arg &gt; &lt; /arg &gt; &lt; tag name= &quot; package &quot; &gt; javax.resource.* &lt; /tag &gt; &lt; arg &gt; javax/resource &lt; /arg &gt; &lt; /template &gt; ] This package defines the Java EE Connector Architecture (JCA) API. Java EE Connector Architecture (JCA) is a Java-based technology solution for connecting application servers and enterprise information systems (EIS) as part of enterprise application integration (EAI) solutions. This is a low-level API aimed at vendors that the average application developer typically does not come in contact with. [ Certified application servers ] [ Java EE 6 certified ] Official Oracle page for Java EE Compatibility. [ Full ] GlassFish server Open Source Edition 3.x and upward https://glassfish.dev.java.net/public/comparing_v2_and_v3.html Oracle GlassFish Server 3, http://java.sun.com/javaee/overview/compatibility.jsp based on the open source GlassFish application server Oracle WebLogic Server 12c http://wcc.on24.com/event/37/57/27/rt/1/documents/player_docanchr_3/weblogic12c_launch_tech_webinar_v8.pdf JBoss Application Server 7.1 http://planet.jboss.org/post/jboss_as_7_1_0_final_thunder_released_java_ee_6_full_profile_certified IBM WebSphere Application Server v8. http://www.ibm.com/developerworks/websphere/techjournal/1106_alcott/1106_alcott.html IBM WebSphere Application Server Community Edition v3.0 http://en.wikipedia.org/wiki/IBM_WebSphere_Application_Server_Community_Edition Apache Geronimo v3.0-beta-1 http://www.h-online.com/open/news/item/Apache-Geronimo-fully-certified-for-Java-EE-6-1378384.html Fujitsu Interstage Application Server powered by Windows Azure V1 http://www.oracle.com/technetwork/java/javaee/community/default-452835.html JEUS 7, an application server from JCP member TmaxSoft. http://www.oracle.com/technetwork/java/javaee/tmax-javaee6-141684.html http://us.tmaxsoft.com/jsp/product/detailcontents.jsp?psCd=00PD04 &amp; menuCd=00PDMSJE [ Web Profile ] JBoss Application Server 6.0. JBoss Application Server 7.0 GlassFish server Open Source Edition 3.x Web Profile Caucho Resin 4.0. http://www.caucho.com/articles/Caucho_Web%20Profile%20JavaEE6_whitepaper_byRR.pdf Apache TomEE http://openejb.apache.org/3.0/apache-tomee.html http://www.marketwatch.com/story/the-apache-software-foundation-announces-apache-tomee-certified-as-java-ee-6-web-profile-compatible-2011-10-04 [ In development for full Java EE 6 ] JOnAS 5.3 An open-source application server from OW2 http://wiki.jonas.ow2.org/xwiki/bin/view/Roadmap/5_3 [ In development for Java EE 6 Web Profile ] JOnAS 5.3 An open-source application server from OW2 [ Java EE 5 certified ] GlassFish Server Open Source Edition 2.1.x Sun Java System Application Server Platform Edition 9.0, based on the open-source GlassFish application server with commercial support from Sun Microsystems Oracle WebLogic Application Server 10.3.5.0 Oracle Containers for Java EE JBoss Application Server 5.1 Java EE Compatibility JBoss AS is now EE5 certified JBoss Enterprise Application Platform IBM WebSphere Application Server V7 IBM WebSphere Application Server Community Edition 2.1 IBM WebSphere Application Server Community Edition, based on Apache Geronimo Apache Geronimo 2.0 JOnAS an open-source application server from OW2 SAP NetWeaver Application Server, Java EE 5 Edition from SAP JEUS 6, an application server from TmaxSoft NEC WebOTX, an Application Server from NEC Fujitsu Interstage Application Server [ J2EE 1.4 certified ] Sun Java System Web Server Sun Java System Application Server Platform Edition 8.2 BEA Systems WebLogic server 9 Oracle Application Server 10g JBoss Application Server 4.x IBM WebSphere Application Server (WAS) Apache Geronimo 1.0 JOnAS, an open-source application server from OW2 Resin, an application server with integrated XML support Pramati Server 5.0 SAP NetWeaver Application Server from SAP AG JEUS 5 from TmaxSoft T4 from Trifork Enterprise Application Server EAServer from Sybase [ Differences between implementations ] Although by definition all Java EE implementations provide the same base level of technologies (namely, the Java EE spec and the associated APIs), they can differ considerably with respect to extra features (like connector s, clustering, fault tolerance, high availability, security, etc.), installed size, memory footprint, startup time, etc. [ See also ] [ Java ] Web container Deployment Descriptor Java BluePrints Sun Java System Portal Server Java EE version history Sun Community Source License Java Research License [ References ] [ External links ] Oracle Technology Network&apos;s Java EE Oracle&apos;s Java EE Compatibility page - Certified Java EE Compatible Implementations Core J2EE Patterns Category:Computing platforms Platform, Enterprise Edition Platform, Enterprise Edition Category:Web application frameworks ar:منصة جافا النسخة التجارية bs:Java platforma, enterprise izdanje ca:Java EE cs:Java EE da:J2EE de:Java Platform, Enterprise Edition el:Java Platform, Enterprise Edition es:Java EE fa:سکوی جاوا، نسخه سازمانی fr:Java EE ko:자바 플랫폼, 엔터프라이즈 에디션 it:Java EE he:Java Enterprise Edition lt:J2EE hu:Java Platform, Enterprise Edition nl:Java 2 Enterprise Edition ja:Java Platform, Enterprise Edition pl:Java Platform, Enterprise Edition pt:Java Platform, Enterprise Edition ru:Java Platform, Enterprise Edition sk:J2EE sh:Java platforma, Enterprise izdanje fi:Java Platform, Enterprise Edition sv:J2EE th:J2EE tr:Java EE uk:Java EE vi:J2EE zh:Java EE
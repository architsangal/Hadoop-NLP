[ December 2010 ] _NSAKEY was a variable name discovered in Windows NT 4 Service Pack 5 (which had been released unstripped of its symbolic debugging data) in August 1999 by Andrew D. Fernandes of Cryptonym Corporation. That variable contained a 1024-bit public key. [ Overview ] Microsoft &apos;s operating system s require all cryptography suites that work with its operating systems to have a digital signature. Since only Microsoft-approved cryptography suites can be installed or used as a component of Windows it is possible to keep export copies of this operating system (and products with Windows installed) in compliance with the Export Administration Regulations (EAR), which are enforced by the US Department of Commerce Bureau of Industry and Security (BIS). It was already known that Microsoft used two keys, a primary and a spare, either of which can create valid signatures. Microsoft had failed to remove the debugging symbols in ADVAPI.DLL, a security and encryption driver, when it released Service Pack 5 for Windows NT 4.0 and Andrew Fernandez, chief scientist with Cryptonym of Morrisville, North Carolina found the primary key stored in the variable _KEY and the second key was labeled _NSAKEY. [ Microsoft, the NSA, and You Cryptonym 1999-08-31 http://www.cryptonym.com/hottopics/msft-nsa/msft-nsa.html 2007-01-07 http://web.archive.org/web/20000617094917/http%3A//www.cryptonym.com/hottopics/msft-nsa/msft-nsa.html 17 June 2000 ] { ( } { Internet Archive / } { Wayback Machine ) } Fernandez published his discovery, touching off a flurry of speculation and conspiracy theories; such as the second key, owned by the United States National Security Agency (the NSA), could allow the intelligence agency to subvert any Windows user&apos;s security. [ September 2011 ] During a presentation at the Computers, Freedom and Privacy 2000 (CFP2000) conference, Duncan Campbell, Senior Research Fellow at the Electronic Privacy Information Center (EPIC), mentioned the _NSAKEY controversy as an example of an outstanding issue related to security and surveillance. [ September 2011 ] In addition Dr. Nicko van Someren found a third key in Windows 2000 which he doubted had a legitimate purpose, and declared that &quot; It looks more fishy &quot;. [ How NSA access was built into Windows Heise 1999-01-04 http://www.heise.de/tp/r4/artikel/5/5263/1.html 2007-01-07 ] [ Microsoft&apos;s reaction ] Microsoft denied the speculations on _NSAKEY. &quot; This report is inaccurate and unfounded. The key in question is a Microsoft key. It is maintained and safeguarded by Microsoft, and we have not shared this key with the NSA or any other party. &quot; [ Microsoft Says Speculation About Security and NSA Is &quot; Inaccurate and Unfounded &quot; Microsoft Corp. 1999-09-03 http://www.microsoft.com/presspass/press/1999/sept99/rsapr.mspx 2006-11-09 ] The key&apos;s symbol was &quot; _NSAKEY &quot; because the NSA is the technical review authority for U.S. export controls, and the key ensures compliance with U.S. export laws. Richard Purcell, Microsoftâ€™s Director of Corporate Privacy, approached Campbell after his presentation and expressed a wish to clear up the confusion and doubts about _NSAKEY. Immediately after the conference, Scott Culp, of the Microsoft Security Response Center, contacted Campbell and offered to answer his questions. Their correspondence began cordially but soon became strained; Campbell apparently felt Culp was being evasive and Culp apparently felt that Campbell was hostilely repeating questions that he had already answered. On 28 April 2000, Culp stated that &quot; we have definitely reached the end of this discussion... [which] is rapidly spiraling into the realm of conspiracy theory &quot; [ The Culp-Campbell correspondence (Microsoft Stonewalls _NSAkey Questions) Cryptome 2000-05-25 http://cryptome.org/nsakey-ms-dc.htm 2006-11-27 ] and Campbell&apos;s further inquiries went unanswered. As for the third key Microsoft claimed it was only in beta builds of Windows 2000 and that its purpose was for signing Cryptographic Service Provider s. [ There is no &quot; Back Door &quot; in Windows Microsoft 1999-09-07 http://www.microsoft.com/technet/archive/security/news/backdoor.mspx?mfr%3Dtrue 2007-01-07 http://web.archive.org/web/20000520001558/http%3A//www.microsoft.com/security/bulletins/backdoor.asp 2000-05-20 ] [ Explanations from other sources ] Some in the software industry question whether the BXA&apos;s EAR has specific requirements for backup keys. [ September 2011 ] However, none claim the legal or technical expertise necessary to authoritatively discuss that document. The following theories have been presented. Microsoft stated that the second key is present as a backup to guard against the possibility of losing the primary secret key. Fernandes doubts this explanation, pointing out that the generally accepted way to guard against loss of a secret key is secret splitting, which would divide the key into several different parts, which would then be distributed throughout senior management. [ Analysis by Bruce Schneier Counterpane 1999-09-15 http://www.schneier.com/crypto-gram-9909.html#NSAKeyinMicrosoftCryptoAPI 2007-01-07 ] He stated that this would be far more robust than using two keys; if the second key is also lost, Microsoft would need to patch or upgrade every copy of Windows in the world, as well as every cryptographic module it had ever signed. On the other hand, if Microsoft failed to think about the consequences of key loss and created a first key without using secret splitting (and did so in secure hardware which doesn&apos;t allow protection to be weakened after key generation), and the NSA pointed out this problem as part of the review process, it might explain why Microsoft weakened their scheme with a second key and why the new one was called _NSAKEY. (The second key might be backed up using secret splitting, so losing both keys needn&apos;t be a problem.) A second possibility is that Microsoft included a second key to be able to sign cryptographic modules outside the United States, while still complying with the BXA&apos;s EAR. If cryptographic modules were to be signed in multiple locations, using multiple keys is a reasonable approach. However, no cryptographic module has ever been found to be signed by _NSAKEY and Microsoft denies that any other certification authority exists. Microsoft denied that the NSA has access to the _NSAKEY secret key. [ http://articles.cnn.com/1999-09-03/tech/9909_03_windows.nsa.02_1_national-security-agency-cryptography-windows-nt4?_s%3DPM%3ATECH NSA key to Windows an open question 3 September 1999 2011-11-20 ] It was possible to remove the second _NSAKEY using the following (note this was for Windows software in 1999). There is good news among the bad, however. It turns out that there is a flaw in the way the &quot; crypto_verify &quot; function is implemented. Because of the way the crypto verification occurs, users can easily eliminate or replace the NSA key from the operating system without modifying any of Microsoft&apos;s originalcomponents. Since the NSA key is easily replaced, it means that non-US companies are free to install &quot; strong &quot; crypto services into Windows, without Microsoft&apos;s or the NSA&apos;s approval. Thus the NSA has effectively removed export control of &quot; strong &quot; crypto from Windows. A demonstration program that replaces the NSA key can be found on Cryptonym&apos;s website. [ Microsoft, the NSA, and You Cryptonym 1999-08-31 http://www.cryptonym.com/hottopics/msft-nsa/msft-nsa.html 2007-01-07 http://web.archive.org/web/20001109204800/http%3A//www.cryptonym.com/hottopics/msft-nsa/msft-nsa.html 9 November 2000 ] { ( } { Internet Archive / } { Wayback Machine ) } [ CAPI Signature Public Keys as PGP Keys ] In September 1999, an anonymous researcher reverse-engineered both theprimary key and the _NSAKEY into PGP-compatible format and published themto the key server s. [ The reverse-engineered keys Cypherspace 1999-09-06 http://cypherspace.org/adam/hacks/ms-nsa-key.html 2007-01-07 ] [ Microsoft&apos;s Primary (_KEY variable) CAPI Signature Key ] { Type Bits/KeyID Date User ID } { pub 1024/346B5095 1999/09/06 Microsoft&apos;s CAPI key &lt; postmaster@microsoft.com &gt; } { -----BEGIN PGP PUBLIC KEY BLOCK----- } { Version: 2.6.3i } { mQCPAzfTc8YAAAEEALJz4nepw3XHC7dJPlKws2li6XZiatYJujG+asysEvHz2mwY } { 2WlRggxFfHtMSJO9FJ3ieaOfbskm01RNs0kfoumvG/gmCzsPut1py9d7KAEpJXEb } { F8C4d+r32p0C3V+FcoVOXJDpsQz7rq+Lj+HfUEe8GIKaUxSZu/SegCE0a1CVABEB } { AAG0L01pY3Jvc29mdCdzIENBUEkga2V5IDxwb3N0bWFzdGVyQG1pY3Jvc29mdC5j } { b20+iQEVAwUQN9Nz5j57yqgoskVRAQFr/gf8DGm1hAxWBmx/0bl4m0metM+IM39J } { yI5mub0ie1HRLExP7lVJezBTyRryV3tDv6U3OIP+KZDthdXb0fmGU5z+wHt34Uzu } { xl6Q7m7oB76SKfNaWgosZxqkE5YQrXXGsn3oVZhV6yBALekWtsdVaSmG8+IJNx+n } { NvMTYRUz+MdrRFcEFDhFntblI8NlQenlX6CcnnfOkdR7ZKyPbVoSXW/Z6q7U9REJ } { TSjBT0swYbHX+3EVt8n2nwxWb2ouNmnm9H2gYfXHikhXrwtjK2aG/3J7k6EVxS+m } { Rp+crFOB32sTO1ib2sr7GY7CZUwOpDqRxo8KmQZyhaZqz1x6myurXyw3Tg== } { =ms8C } { -----END PGP PUBLIC KEY BLOCK----- } [ Microsoft&apos;s Secondary (_NSAKEY variable, now _KEY2) CAPI Signature Key ] { Type Bits/KeyID Date User ID } { pub 1024/51682D1F 1999/09/06 NSA&apos;s Microsoft CAPI key &lt; postmaster@nsa.gov &gt; } { -----BEGIN PGP PUBLIC KEY BLOCK----- } { Version: 2.6.3i } { mQCPAzfTdH0AAAEEALqOFf7jzRYPtHz5PitNhCYVryPwZZJk2B7cNaJ9OqRQiQoi } { e1YdpAH/OQh3HSQ/butPnjUZdukPB/0izQmczXHoW5f1Q5rbFy0y1xy2bCbFsYij } { 4ReQ7QHrMb8nvGZ7OW/YKDCX2LOGnMdRGjSW6CmjK7rW0veqfoypgF1RaC0fABEB } { AAG0LU5TQSdzIE1pY3Jvc29mdCBDQVBJIGtleSA8cG9zdG1hc3RlckBuc2EuZ292 } { PokBFQMFEDfTdJE+e8qoKLJFUQEBHnsH/ihUe7oq6DhU1dJjvXWcYw6p1iW+0euR } { YfZjwpzPotQ8m5rC7FrJDUbgqQjoFDr++zN9kD9bjNPVUx/ZjCvSFTNu/5X1qn1r } { it7IHU/6Aem1h4Bs6KE5MPpjKRxRkqQjbW4f0cgXg6+LV+V9cNMylZHRef3PZCQa } { 5DOI5crQ0IWyjQCt9br07BL9C3X5WHNNRsRIr9WiVfPK8eyxhNYl/NiH2GzXYbNe } { UWjaS2KuJNVvozjxGymcnNTwJltZK4RLZxo05FW2InJbtEfMc+m823vVltm9l/f+ } { n2iYBAaDs6I/0v2AcVKNy19Cjncc3wQZkaiIYqfPZL19kT8vDNGi9uE= } { =PhHT } { -----END PGP PUBLIC KEY BLOCK----- } [ See also ] Trusted Computer System Evaluation Criteria [ References ] [ December 2010 ] Category:Microsoft criticisms and controversies Category:History of cryptography Category:Conspiracy theories Category:National Security Agency Category:Microsoft Windows security technology fr:NSAKEY ru:NSAKEY
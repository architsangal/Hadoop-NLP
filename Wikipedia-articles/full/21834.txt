In the mathematical subfield of numerical analysis, a B-spline is a spline function that has minimal support with respect to a given degree, smoothness, and domain partition. B-splines were investigated as early as the nineteenth century by Nikolai Lobachevsky. A fundamental theorem states that every spline function of a given degree, smoothness, and domain partition, can be uniquely represented as a linear combination of B-splines of that same degree and smoothness, and over that same partition. [ Carl de Boor A Practical Guide to Splines Springer-Verlag 113–114 1978 ] The term &quot; B-spline &quot; was coined by Isaac Jacob Schoenberg and is short for basis spline. [ Carl de Boor A Practical Guide to Splines Springer-Verlag 114–115 1978 ] { Gary D. Knott (2000), Interpolating cubic splines. Springer. p. 151 } B-splines can be evaluated in a numerically stable way by the de Boor algorithm. Simplified, potentially faster variants of the de Boor algorithm have been created but they suffer from comparatively lower stability. [ Lee E. T. Y. 1982 December A Simplified B-Spline Computation Routine Computing 29 4 365–371 Springer-Verlag 10.1007/BF02246763 ] [ Lee, E. T. Y. Computing 3 229–238 Springer-Verlag 10.1007/BF02240069 Comments on some B-spline algorithms 36 1986 ] In the computer science subfields of computer-aided design and computer graphics, the term B-spline frequently refers to a spline curve parametrized by spline functions that are expressed as linear combinations of B-splines (in the mathematical sense above). A B-spline is simply a generalisation of a Bézier curve, and it can avoid the Runge phenomenon without increasing the degree of the B-spline. [ Definition ] Given m real values t i, called knots, with t_0 \le t_1 \le \cdots \le t_{m-1} a B-spline of degree n is a parametric curve \mathbf{S}:[t_{n}, t_{m-n-1}] \to \mathbb{R}^d composed of a linear combination of basis B-splines b i,n of degree n \mathbf{S}(t)= \sum_{i=0}^{m-n-2} \mathbf{P}_{i} b_{i,n}(t) \mbox{, } t \in [t_{n},t_{m-n-1}]. The points \mathbf{P}_{i} \in \mathbb{R}^d are called control points or de Boor points. There are m−n-1 control points, and the convex hull of the control points is a bounding volume of the curve. The m-n-1 basis B-splines of degree n can be defined, for n=0,1,...,m-2, using the Cox-de Boor recursion formula b_{j,0}(t) := \left\{ \begin{matrix} 1 &amp; \mathrm{if} \quad t_j \leq t &lt; t_{j+1} \\ 0 &amp; \mathrm{otherwise} \end{matrix} \right.,\qquad j=0,\ldots, m{-}2 b_{j,n}(t) := \frac{t - t_j}{t_{j+n} - t_j} b_{j,n-1}(t) + \frac{t_{j+n+1} - t}{t_{j+n+1} - t_{j+1}} b_{j+1,n-1}(t),\qquad j=0,\ldots, m{-}n{-}2. Note that j+n+1 can not exceed m-1, which limits both j and n. When the knots are equidistant the B-spline is said to be uniform, otherwise non-uniform. If two knots t j are identical, any resulting indeterminate forms 0/0 are deemed to be 0. Note that when one sums a run of adjacent n-degree basis B-splines one obtains, from this recursion \sum_{j=j&apos;}^{j&apos;&apos;} b_{j,n}(t) = \frac{t - t_{j&apos;}}{t_{j&apos;+n} - t_{j&apos;}} b_{j&apos;,n-1}(t) \quad + \sum_{j=j&apos;{+}1}^{j&apos;&apos;} b_{j,n{-}1}(t) \quad + \; \frac{t_{j&apos;&apos;+n+1} - t}{t_{j&apos;&apos;+n+1} - t_{j&apos;&apos;+1}} b_{j&apos;&apos;+1,n-1}(t) for any sum with 0\le j&apos; &lt; j&apos;&apos;\le m{-}n{-}2. When j&apos;&apos;\ge j&apos;+n-1 here, then this sum is, by this recursion, identically equal to 1, within the limited subrange t_{j&apos;{+}n} \le t \le t_{j&apos;&apos;{+}1}, (since this interval excludes the supports of the two basis B-splines in the separate terms at the ends of this sum). [ Uniform B-spline ] When the B-spline is uniform, the basis B-splines for a given degree n are just shifted copies of each other. An alternative non-recursive definition for the m−n-1 basis B-splines is b_{j,n}(t) = b_n(t - t_j), \qquad\; j = 0, \ldots, m-n-2 with b_{n}(t) := \frac{n+1}{n} \sum_{i=0}^{n+1} \omega_{i,n}(t - t_i)_+^{n} \,\; and \omega_{i,n} := \prod_{j=0, j \neq i}^{n+1} \frac{1}{t_j - t_i} \,\; where (t - t_i)_+^n := \left\{\begin{matrix} (t - t_i)^n &amp; \mbox{if}\ t \ge t_i \\ 0 &amp; \mbox{if}\ t &lt; t_i \end{matrix}\right. is the truncated power function. [ Cardinal B-spline ] Define B 0 as the [[indicator function| indicator (or characteristic) function]] of [-\tfrac{1}{2}, \tfrac{1}{2}], and B k recursively as the convolution product B_k := B_{k-1} * B_0, ~k =1, 2, \dots then B k are called (centered) cardinal B-splines. This definition goes back to Schoenberg. B k has compact support [-\tfrac{k+1}{2}, \tfrac{k+1}{2}] and is an even function. As k \rightarrow \infty the normalized cardinal B-splines tend to the Gaussian function. { Brinks R: On the convergence of derivatives of B-splines to derivatives of the Gaussian function, Comp. Appl. Math., 27, 1, 2008 } [ Notes ] When the number of de Boor control points is one more than the degree and t_0 = \ldots = t_n = 0 and t_{n+1} = \ldots = t_{2n} = 1 (thus t \in [0, 1] ), the B-Spline degenerates into a Bézier curve. In particular, the B-Spline basis function b_{i,n}(t) coincides with the n-th degree univariate Bernstein polynomial. [ Prautzsch et al. Hartmut 2002 Bezier and B-Spline Techniques 3-540-43761-4 60–66 Springer-Verlag ] The shape of the basis functions is determined by the position of the knots. Scaling or translating the knot vector does not alter the basis functions. The spline is contained in the convex hull of its control points. A basis B-spline of degree n b_{i,n}(t)\,\; is non-zero only in the interval [t i, t i+n+1 ] that is b_{i,n}(t) = \left\{\begin{matrix} &gt; 0 &amp; \mathrm{if} \quad t_{i} \le t &lt; t_{i+n+1} \\ 0 &amp; \mathrm{otherwise} \end{matrix} \right. In other words if we manipulate one control point we only change the local behaviour of the curve and not the global behaviour as with Bézier curves. Also see Bernstein polynomial for further details. [ Examples ] [ Constant B-spline ] The constant B-spline is the simplest spline. It is defined on only one knot span and is not even continuous on the knots. It is just the indicator function for the different knot spans. b_{j,0}(t) = 1_{[t_j,t_{j+1}]} = \left\{\begin{matrix} 1 &amp; \mathrm{if} \quad t_j \le t &lt; t_{j+1} \\ 0 &amp; \mathrm{otherwise} \end{matrix} \right. [ Linear B-spline ] The linear B-spline is defined on two consecutive knot spans and is continuous on the knots, but not differentiable. b_{j,1}(t) = \left\{\begin{matrix} \frac{t - t_j}{t_{j+1} - t_j} &amp; \mathrm{if} \quad t_j \le t &lt; t_{j+1} \\ \frac{t_{j+2} - t}{t_{j+2} - t_{j+1}} &amp; \mathrm{if} \quad t_{j+1} \le t &lt; t_{j+2} \\ 0 &amp; \mathrm{otherwise} \end{matrix} \right. [ Uniform quadratic B-spline ] Quadratic B-splines with uniform knot-vector is a commonly used form of B-spline. The blending function can easily be precalculated, and is equal for each segment in this case. b_{j,2}(t) = \begin{cases} \frac{1}{2}(t-t_j)^2 &amp; t_j\le t \le t_{j+1} \\ -(t-t_{j+1})^2 + (t-t_{j+1}) + \frac{1}{2} &amp; t_{j+1} \le t \le t_{j+2}\\ \frac{1}{2}(1-(t-t_{j+2}))^2 &amp; t_{j+2} \le t \le t_{j+3}\\ 0 &amp; \mbox{otherwise} \end{cases} Put in matrix -form, it is: { Splitting a uniform B-spline curve } \mathbf{S}_i(t) = \begin{bmatrix} t^2 &amp; t &amp; 1 \end{bmatrix} \frac{1}{2} \begin{bmatrix} 1 &amp; -2 &amp; 1 \\ -2 &amp; 2 &amp; 0 \\ 1 &amp; 1 &amp; 0 \end{bmatrix} \begin{bmatrix} \mathbf{p}_{i-1} \\ \mathbf{p}_{i} \\ \mathbf{p}_{i+1} \end{bmatrix} for t \in [0,1], i = 1,2 \ldots m-2 [ Cubic B-Spline ] A B-spline formulation for a single segment can be written as: \mathbf{S}_{i} (t) = \sum_{k=0}^3 \mathbf{P}_{i-3+k} b_{i-3+k,3} (t) \mbox{; }\ t \in [0,1] where S i is the ith B-spline segment and P is the set of control points, segment i and k is the local control point index. A set of control points would be P_i^w = ( w_i x_i, w_i y_i, w_i z_i, w_i) where the w_i is weight, pulling the curve towards control point P_i as it increases or moving the curve away as it decreases. An entire set of segments, m-2 curves ( S_3,S_4,...,S_m ) defined by m+1 control points ( P_0,P_1,...,P_m, m \ge 3 ), as one B-spline in t would be defined as: \mathbf{S}(t) = \sum_{i=0}^{m-1} \mathbf{P}_{i} b_{i,3} (t) where i is the control point number and t is a global parameter giving knot value s. This formulation expresses a B-spline curve as a linear combination of B-spline basis functions, hence the name. There are two types of B-spline - uniform and non-uniform. A non-uniform B-spline is a curve where the intervals between successive control points are not necessarily equal (the knot vector of interior knot spans are not equal). A common form is where intervals are successively reduced to zero, interpolating control points. { cubic Hermite spline (dark red). } [ Uniform cubic B-splines ] Cubic B-splines with uniform knot-vector is the most commonly used form of B-spline. The blending function can easily be precalculated, and is equal for each segment in this case. Put in matrix -form, it is: \mathbf{S}_i(t) = \begin{bmatrix} t^3 &amp; t^2 &amp; t &amp; 1 \end{bmatrix} \frac{1}{6} \begin{bmatrix} -1 &amp; 3 &amp; -3 &amp; 1 \\ 3 &amp; -6 &amp; 3 &amp; 0 \\ -3 &amp; 0 &amp; 3 &amp; 0 \\ 1 &amp; 4 &amp; 1 &amp; 0 \end{bmatrix} \begin{bmatrix} \mathbf{p}_{i-1} \\ \mathbf{p}_{i} \\ \mathbf{p}_{i+1} \\ \mathbf{p}_{i+2} \end{bmatrix} for t \in [0,1]. [ P-spline ] The term P-spline stands for &quot; penalized B-spline &quot;. It refers to using the B-spline representation where the coefficients are determined partly by the data to be fitted, and partly by an additional penalty function that aims to impose smoothness to avoid overfitting. { Eilers, P.H.C. and Marx, B.D. (1996). Flexible smoothing with B-splines and penalties (with comments and rejoinder). Statistical Science 11(2): 89-121. } [ See also ] Spline (mathematics) Nonuniform rational B-spline s (NURBS) De Boor algorithm M-spline I-spline [ References ] [ External links ] B-spline on MathWorld Module B-Splines by John H. Mathews B-splines of third order on a non-uniform grid by Johannes Ruf FORTRAN code for interpolation using B-splines bivariate B-spline from numpy Interactive B-splines with JSXGraph Category:Splines Category:Interpolation ca:B-spline cs:B-spline křivka de:Spline#B-Splines es:B-spline eo:B-laŭparta interpola funkcio fr:B-spline ja:B-スプライン曲線 pl:Krzywa B-sklejana pt:B-spline ru:B-сплайн uk:B-сплайн zh:B样条 [ Koehler Dr. Ralph 2D/3D Graphics and Splines with Source Code 0759611874 ]
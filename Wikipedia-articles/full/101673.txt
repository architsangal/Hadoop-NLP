[ &quot; Robots.txt &quot; redirects here. For Wikipedia&apos;s robots.txt file, see MediaWiki:Robots.txt and [//en.wikipedia.org/robots.txt //en.wikipedia.org/robots.txt]. ] [ November 2009 ] The Robot Exclusion Standard, also known as the Robots Exclusion Protocol or robots.txt protocol, is a convention to prevent cooperating web crawler s and other web robot s from accessing all or part of a website which is otherwise publicly viewable. Robots are often used by search engines to categorize and archive web sites, or by webmasters to proofread source code. The standard is different from, but can be used in conjunction with, Sitemaps, a robot inclusion standard for websites. [ History ] The invention of &quot; robots.txt &quot; is attributed to Martijn Koster, when working for WebCrawler in 1994 { http://www.robotstxt.org/orig.html#status } { http://www.robotstxt.org/norobots-rfc.txt }. &quot; robots.txt &quot; was then popularized with the advent of AltaVista, and other popular search engines, in the following years. [ July 2011 ] [ About the standard ] [ which search engines follow that standard. January 2011 ] If a site owner wishes to give instructions to web robots they must place a text file called robots.txt in the root of the web site hierarchy (e.g. www.example.com/robots.txt ). This text file should contain the instructions in a specific format (see examples below). Robots that choose to follow the instructions try to fetch this file and read the instructions before fetching any other file from the web site. If this file doesn&apos;t exist web robots assume that the web owner wishes to provide no specific instructions. A robots.txt file on a website will function as a request that specified robots ignore specified files or directories when crawling a site. This might be, for example, out of a preference for privacy from search engine results, or the belief that the content of the selected directories might be misleading or irrelevant to the categorization of the site as a whole, or out of a desire that an application only operate on certain data. Links to pages listed in robots.txt can still appear in search results if they are linked to from a page that is crawled. { http://www.youtube.com/watch?v=KBdEwpRQRD0#t=196s } For websites with multiple subdomains, each subdomain must have its own robots.txt file. If example.com had a robots.txt file but a.example.com did not, the rules that would apply for example.com would not apply to a.example.com. [ Disadvantages ] Despite the use of the terms &quot; allow &quot; and &quot; disallow &quot;, the protocol is purely advisory. It relies on the cooperation of the web robot, so that marking an area of a site out of bounds with robots.txt does not guarantee exclusion of all web robots. In particular, malicious web robots are unlikely to honor robots.txt There is no official standards body or RFC for the robots.txt protocol. It was created by consensus in June 1994 by members of the robots mailing list (robots-request@nexor.co.uk). The information specifying the parts that should not be accessed is specified in a file called robots.txt in the top-level directory of the website. The robots.txt patterns are matched by simple substring comparisons, so care should be taken to make sure that patterns matching directories have the final &apos;/&apos; character appended, otherwise all files with names starting with that substring will match, rather than just those in the directory intended. [ Examples ] This example tells all robots to visit all files because the wildcard specifies all robots: User-agent: *Disallow: This example tells all robots to stay out of a website: User-agent: *Disallow: / The next is an example that tells all robots not to enter four directories of a website: User-agent: *Disallow: /cgi-bin/Disallow: /images/Disallow: /tmp/Disallow: /private/ Example that tells a specific robot not to enter one specific directory: User-agent: BadBot # replace the &apos;BadBot&apos; with the actual user-agent of the botDisallow: /private/ Example that tells all robots not to enter one specific file: User-agent: *Disallow: /directory/file.html Note that all other files in the specified directory will be processed. Example demonstrating how comments can be used: Comments appear after the &quot; # &quot; symbol at the start of a line, or after a directive User-agent: * # match all botsDisallow: / # keep them out Example demonstrating how to add the parameter to tell bots where the Sitemap is located User-agent: *Sitemap: http://www.example.com/sitemap.xml # tell the bots where your sitemap is located [ Nonstandard extensions ] [ Crawl-delay directive ] Several major crawlers support a Crawl-delay parameter, set to the number of seconds to wait between successive requests to the same server: [ http://help.yahoo.com/l/us/yahoo/search/webcrawler/slurp-03.html How can I reduce the number of requests you make on my web site? 2007-03-31 Yahoo! Slurp ] [ http://search.msn.com/docs/siteowner.aspx?t%3DSEARCH_WEBMASTER_FAQ_MSNBotIndexing.htm%26amp%3BFORM%3DWFDD#D MSNBot is crawling a site too frequently 2007-02-08 Troubleshoot issues with MSNBot and site crawling ] [ http://about.ask.com/en/docs/about/webmasters.shtml#15 About Ask.com: Webmasters ] User-agent: *Crawl-delay: 10 [ Allow directive ] Some major crawlers support an Allow directive which can counteract a following Disallow directive. [ http://www.google.com/support/webmasters/bin/answer.py?hl%3Den%26amp%3Banswer%3D156449%26amp%3Bfrom%3D40364 Webmaster Help Center - How do I block Googlebot? 2007-11-20 ] [ http://help.yahoo.com/l/us/yahoo/search/webcrawler/slurp-02.html How do I prevent my site or certain subdirectories from being crawled? - Yahoo Search Help 2007-11-20 ] This is useful when one tells robots to avoid an entire directory but still wants some HTML documents in that directory crawled and indexed. While by standard implementation the first matching robots.txt pattern always wins, Google&apos;s implementation differs in that Allow patterns with equal or more characters in the directive path win over a matching Disallow pattern. [ http://blog.semetrical.com/googles-secret-approach-to-robots-txt/ Google&apos;s Hidden Interpretation of Robots.txt 2010-11-15 ] Bing uses the Allow or Disallow directive which is the most specific. [ http://www.bing.com/community/site_blogs/b/webmaster/archive/2008/06/03/robots-exclusion-protocol-joining-together-to-provide-better-documentation.aspx Robots Exclusion Protocol - joining together to provide better documentation 2009-12-03 ] In order to be compatible to all robots, if one wants to allow single files inside an otherwise disallowed directory, it is necessary to place the Allow directive(s) first, followed by the Disallow, for example: Allow: /folder1/myfile.htmlDisallow: /folder1/ This example will Disallow anything in /folder1/ except /folder1/myfile.html, since the latter will match first. In case of Google, though, the order is not important. [ Sitemap ] Some crawlers support a Sitemap directive, allowing multiple Sitemaps in the same robots.txt in the form: [ http://ysearchblog.com/2007/04/11/webmasters-can-now-auto-discover-with-sitemaps/ Yahoo! Search Blog - Webmasters can now auto-discover with Sitemaps 2009-03-23 ] Sitemap: http://www.gstatic.com/s2/sitemaps/profiles-sitemap.xmlSitemap: http://www.google.com/hostednews/sitemap_index.xml [ Universal &quot; * &quot; match ] The Robot Exclusion Standard does not mention anything about the &quot; * &quot; character in the Disallow: statement. Some crawlers like Googlebot and Slurp recognize strings containing &quot; * &quot;, while MSNbot and Teoma interpret it in different ways. [ http://ghita.org/search-engines-dynamic-content-issues.html Search engines and dynamic content issues 2007-04-01 MSNbot issues with robots.txt ] &apos;&apos; [ See also ] [ Internet ] Automated Content Access Protocol - a failed proposal to extend robots.txt BotSeer - search engine for robots.txt files Distributed web crawling Focused crawler Humans.txt - a file intended for humans to read as opposed to robots Internet Archive Library of Congress Digital Library project National Digital Information Infrastructure and Preservation Program Sitemaps Nofollow and Link Spam Spider trap Web archiving Web crawler Meta Elements for Search Engines [ References ] [ External links ] { * www.robotstxt.org - The Web Robots Pages } { * History of robots.txt - (how } { Charles Stross prompted its invention; original comment on } { Slashdot ) } Block or remove pages using a robots.txt file - Google Webmaster Tools Help = Using the robots.txt analysis tool About Robots.txt at the Mediawiki website List of Bad Bots - rogue robots and spiders which ignore these guidelines Wikipedia&apos;s Robots.txt - an example Robots.txt Generator + Tutorial Robots.txt Generator Tool Robots.txt is not a security measure Category:World Wide Web bar:Robots Exclusion Standard ca:Protocol d&apos;exclusió de robots cs:Protokol pro zakázání přístupu robotům da:Robot Exclusion Standard de:Robots Exclusion Standard es:Estándar de exclusión de robots fr:Protocole d&apos;exclusion des robots ko:로봇 배제 표준 id:Robots.txt it:Protocollo di esclusione robot he:פרוטוקול אי הכללת רובוטים nl:Robots Exclusion Protocol ja:Robots Exclusion Standard pl:Robots Exclusion Protocol pt:Protocolo de Exclusão de Robôs ru:Стандарт исключений для роботов simple:Robots exclusion standard fi:Robotin rajausstandardi sv:Robots Exclusion Standard tr:Robot engelleme standardı zh:Robots.txt
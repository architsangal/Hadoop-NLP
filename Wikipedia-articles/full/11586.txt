[ a policy of the security industry other meanings Full disclosure (disambiguation) ] In computer security, full disclosure (FD) is the disclosure of all the details of a security problem which are known. It is a philosophy of security management completely opposed to the idea of security through obscurity. The concept of full disclosure is controversial, but not new; it has been an issue for locksmiths since the 19th century. [ Definition ] Full disclosure requires that full details of a security vulnerability are disclosed to the public, including details of the vulnerability and how to detect and exploit it. The theory behind full disclosure is that releasing vulnerability information immediately results in quicker fixes and better security. Fixes are produced faster because vendors and authors are forced to respond in order to protect their system from potential attacks as well as to protect their own image. Security is improved because the window of exposure, the amount of time the vulnerability is open to attack, is reduced. In the realm of computer vulnerabilities, disclosure is often achieved via mailing lists such as a Full disclosure mailing list and by other means. [ Various interpretations ] Even among those who believe in disclosure there are differing policies about when, to whom, and how much to disclose. Some believe that in the absence of any public exploit s for the problem, full and public disclosure should be preceded by disclosure of the vulnerability to the vendors or authors of the system. This private advance disclosure allows the vendor time to produce a fix or workaround. This philosophy is sometimes called responsible disclosure. In the case that a vendor is notified and a fix is not produced within a reasonable time, disclosure is generally made to the public. Opinions differ on what constitutes a reasonable time [ September 2010 ]. Five to thirty days is typical, although the period could be a matter of hours. [ September 2010 ] Internet Security Systems was widely criticized for allowing less than eight hours before disclosing details of a vulnerability in the Apache HTTP Server. [ September 2010 ] Limited disclosure, is an alternative approach where full details of the vulnerability are provided to a restricted community of developers and vendors while the public is only informed of a potential security issue. Advocates of this approach also claim the term &quot; responsible disclosure &quot;. [ September 2010 ] To address the controversy of disclosing harmful information to the general Internet community, including blackhats, in 2000, Rain Forest Puppy developed the RFPolicy, which is an attempt to formalize the process of alerting vendors to security problems in their products, and establish guidelines on what to do if the vendor fails to respond. [ http://www.securityfocus.com/news/11437 Bug brokers offering higher bounties SecurityFocus Robert Lemos, 2007-01-23 2011-01-06 ] One challenge with &quot; responsible disclosure &quot; is that some vendors do not respond, or inordinately delay their response, to vulnerability reports that are not public. As long as a vulnerability is not widely known to the public (with enough detail to reproduce the attack), vendors may refuse to fix the vulnerability or refuse to give it enough priority to actually repair it. Unfortunately, vulnerabilities reported to a vendor may already be exploited, or may soon be detected by someone with intent to exploit them. Thus, most security researchers set maximum times (such as 14 days or 30 days) [ September 2010 ] before fully revealing a vulnerability to the public, since otherwise many vendors would never fix even critical vulnerabilities in their products. Many security researchers cite vendors&apos; past failure to respond to vulnerability reports as the reason that they fully disclose vulnerabilities. [ History ] The issue of full disclosure was first raised in the context of locksmithing, in a 19th century controversy regarding whether weaknesses in lock systems should be kept secret in the locksmithing community, or revealed to the public. According to A. C. Hobbs : A commercial, and in some respects a social doubt has been started within the last year or two, whether it is right to discuss so openly the security or insecurity of locks. Many well-meaning persons suppose that the discussion respecting the means for baffling the supposed safety of locks offers a premium for dishonesty, by showing others how to be dishonest. This is a fallacy. Rogues are very keen in their profession, and know already much more than we can teach them respecting their several kinds of roguery. Rogues knew a good deal about lock-picking long before locksmiths discussed it among themselves, as they have lately done. If a lock, let it have been made in whatever country, or by whatever maker, is not so inviolable as it has hitherto been deemed to be, surely it is to the interest of honest persons to know this fact, because the dishonest are tolerably certain to apply the knowledge practically; and the spread of the knowledge is necessary to give fair play to those who might suffer by ignorance. It cannot be too earnestly urged that an acquaintance with real facts will, in the end, be better for all parties. Some time ago, when the reading public was alarmed at being told how London milk is adulterated, timid persons deprecated the exposure, on the plea that it would give instructions in the art of adulterating milk; a vain fear, milkmen knew all about it before, whether they practiced it or not; and the exposure only taught purchasers the necessity of a little scrutiny and caution, leaving them to obey this necessity or not, as they pleased. — A. C. Hobbs (Charles Tomlinson, ed.), Locks and Safes: The Construction of Locks. Published by Virtue &amp; Co., London, 1853 (revised 1868). The full disclosure debate came back to life through dissatisfaction at the methods employed by the Internet security infrastructure in the early 1990s. Software security vulnerabilities were reported to CERT, which would then inform the vendor of that software. Public disclosure of the hole would not take place until the vendor had readied a patch to fix it. However, since the disclosures were private, some vendors took years to produce a fix [ September 2010 ], or never produced a fix at all [ September 2010 ]. In the meantime, the vulnerabilities were actively exploited by cracker s. [ September 2010 ] Vendors ignoring warnings and relying on the ignorance of attackers appeal to security through obscurity - however there is a well-established principle that obscurity should never be used as a primary security measure, and at some point vendor reliance on obscurity becomes a fraud ulent misrepresentation of the security of their products. Since CERT and the vendors were aware of the holes, but attempted to keep them secret even to the administrators of machines being cracked in the field, it was felt that CERT&apos;s policies were a manifestation of an impractical, &quot; ivory tower &quot; attitude. In response to this, mailing lists and other avenues for full disclosure were established, notably the Full disclosure mailing list. [ Controversy ] Full disclosure can be controversial, as often these disclosures include code or executable tools to exploit the vulnerability. The argument against disclosure is that providing complete details or tools to malicious attackers, such as black hat s and script kiddie s, allows them to take advantage of vulnerabilities more quickly and makes attacks more widespread. However, this argument assumes that without disclosure such tools and attacks would not have occurred. The advantage of disclosure is that white hat s will obtain the information, and that the vulnerability will be detected and patched more quickly. [ http://news.cnet.com/8301-27080_3-20007421-245.html Googler criticized for disclosing Windows-related flaw InSecurity Complex - CNET News 2010-06-11 2011-01-06 ] n3td3v was banned from the Full disclosure mailing list on January 21 2009. n3td3v is thought to be banned in response to his widespread criticism of what he saw as irresponsible disclosure practices carried out by some security researchers, such as HD Moore. Some saw the banning of n3td3v as an attack on freedom of speech in an email post to the list August 31 2009, while others accuse him of being an internet troll. [ http://www.securityfocus.com/news/11419 Researcher attempts to shed light on security troll 2006-10-20 2011-01-06 ] In August 2010, HD Moore found about 40 vulnerabilities related to DLL load hijacking in Windows applications that Rapid7 was going to publish under its vulnerability disclosure policy. { Rapid7 Vulnerability Disclosure Policy } [ &quot; I see that Rapid 7 has a policy. Need the ref that HD Moore and Rapid7 collided on research &quot; September 2010 ] Arcos, a Slovenian security firm, found one related vulnerability for iTunes and decided to publish without alerting the vendor, saying &quot; it hasn’t paid out well &quot; in the past and &quot; we’ve found better markets for this kind of information &quot;. { Rapid7 blog: Application DLL Load Hijacking } [ See also ] MBTA vs. Anderson Security engineering Kerckhoffs&apos; principle Defensive programming Cracking Hacking [ References ] [ External links ] Full Disclosure Debate Bibliography, by date Why publishing exploit code is *generally* a bad idea if you&apos;re paid to protect Full Disclosure and the Window of Exposure from Bruce Schneier &apos;s Crypto-Gram, September 2000 Full Disclosure from Bruce Schneier&apos;s Crypto-Gram, November 2001 Publicizing Vulnerabilities, from Bruce Schneier&apos;s Crypto-Gram, February 15, 2000 Full-Disclosure mailing list Matt Blaze, Is it harmful to discuss security vulnerabilities?, downloaded October 2005. Matt Mecham: Why full disclosure is bad Category:Computer security procedures fr:Full disclosure hu:Teljes közzététel ja:フルディスクロージャ pl:Full disclosure
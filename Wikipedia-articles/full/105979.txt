[ XOR the logic gate XOR gate other uses XOR (disambiguation) ] [ January 2012 ] 220px Venn diagram of \scriptstyle A \oplus B OR but not AND is XOR 220px Venn diagram of \scriptstyle A \oplus B \oplus C 40px ~\oplus~ 40px ~\Leftrightarrow~ 40px The logical operation exclusive disjunction, also called exclusive or ( symbolized by the prefix operator J, or by the infix operators XOR, EOR, EXOR, ⊻ or ⊕, [ icon ˌ ɛ k s _ ˈ ɔr ] or [ ˈ z ɔr ] ), is a type of logical disjunction on two operands that results in a value of true if exactly one of the operands has a value of true. { See } { Stanford Encyclopedia of Philosophy, article Disjunction } A simple way to state this is &quot; one or the other but not both. &quot; Put differently, exclusive disjunction is a logical operation on two logical value s, typically the values of two proposition s, that produces a value of true only in cases where the truth value of the operands differ. The opposite of XOR is logical biconditional, where the output of two compared values is true only if both A and B are the same. [ Truth table ] { Walsh matrix (compare: } { Hadamard code ) } The truth table of ~A \oplus B (also written as A\, \mathrm{XOR}\, B or A \neq B ) is as follows: XOR Truth Table Input Output A B 0 0 0 0 1 1 1 0 1 1 1 0 [ Equivalencies, elimination, and introduction ] Exclusive disjunction essentially means &apos;either one, but not both&apos;. In other words, if and only if one is true, the other cannot be true. For example, one of the two horses will win the race, but not both of them. The exclusive disjunction p \oplus q, or Jpq, can be expressed in terms of the logical conjunction ( \wedge ), the disjunction ( \lor ), and the negation ( \lnot ) as follows: \begin{matrix} p \oplus q &amp; = &amp; (p \land \lnot q) \lor (\lnot p \land q) \end{matrix} The exclusive disjunction p \oplus q can also be expressed in the following way: \begin{matrix} p \oplus q &amp; = &amp; \lnot (p \land q) \land (p \lor q) \end{matrix} This representation of XOR may be found useful when constructing a circuit or network, because it has only one \lnot operation and small number of \wedge and \lor operations. The proof of this identity is given below: \begin{matrix} p \oplus q &amp; = &amp; (p \land \lnot q) &amp; \lor &amp; (\lnot p \land q) \\ &amp; = &amp; ((p \land \lnot q) \lor \lnot p) &amp; \and &amp; ((p \land \lnot q) \lor q) \\ &amp; = &amp; ((p \lor \lnot p) \land (\lnot q \lor \lnot p)) &amp; \land &amp; ((p \lor q) \land (\lnot q \lor q)) \\ &amp; = &amp; (\lnot p \lor \lnot q) &amp; \land &amp; (p \lor q) \\ &amp; = &amp; \lnot (p \land q) &amp; \land &amp; (p \lor q) \end{matrix} It is sometimes useful to write p \oplus q in the following way: \begin{matrix} p \oplus q &amp; = &amp; \lnot ((p \land q) \lor (\lnot p \land \lnot q)) \end{matrix} This equivalence can be established by applying De Morgan&apos;s laws twice to the fourth line of the above proof. The exclusive or is also equivalent to the negation of a logical biconditional, by the rules of material implication (a material conditional is equivalent to the disjunction of the negation of its antecedent and its consequence) and material equivalence. In summary, we have, in mathematical and in engineering notation: \begin{matrix} p \oplus q &amp; = &amp; (p \land \lnot q) &amp; \lor &amp; (\lnot p \land q) &amp; = &amp; p\overline{q} + \overline{p}q \\ \\ &amp; = &amp; (p \lor q) &amp; \land &amp; (\lnot p \lor \lnot q) &amp; = &amp; (p+q)(\overline{p}+\overline{q}) \\ \\ &amp; = &amp; (p \lor q) &amp; \land &amp; \lnot (p \land q) &amp; = &amp; (p+q)(\overline{pq}) \end{matrix} [ Relation to modern algebra ] Although the operators \wedge ( conjunction ) and \lor ( disjunction ) are very useful in logic systems, they fail a more generalizable structure in the following way: The systems (\{T, F\}, \wedge) and (\{T, F\}, \lor) are monoid s. This unfortunately prevents the combination of these two systems into larger structures, such as a mathematical ring. However, the system using exclusive or (\{T, F\}, \oplus) is an abelian group. The combination of operators \wedge and \oplus over elements \{T, F\} produce the well-known field F_2. This field can represent any logic obtainable with the system (\land, \lor) and has the added benefit of the arsenal of algebraic analysis tools for fields. More specifically, if one associates F with 0 and T with 1, one can interpret the logical &quot; AND &quot; operation as multiplication on F_2 and the &quot; XOR &quot; operation as addition on F_2 : \begin{matrix} r = p \land q &amp; \Leftrightarrow &amp; r = p \cdot q \pmod 2 \\ \\ r = p \oplus q &amp; \Leftrightarrow &amp; r = p + q \pmod 2 \\ \end{matrix} Using this basis to describe a boolean system is referred to as algebraic normal form [ Exclusive &quot; or &quot; in English ] The Oxford English Dictionary explains &quot; either... or &quot; as follows: The primary function of either, etc., is to emphasize the indifference of the two (or more) things or courses... but a secondary function is to emphasize the mutual exclusiveness, = either of the two, but not both. The exclusive-or explicitly states &quot; one or the other, but not neither nor both. &quot; Following this kind of common-sense intuition about &quot; or &quot;, it is sometimes argued that in many natural languages, English included, the word &quot; or &quot; has an &quot; exclusive &quot; sense. The exclusive disjunction of a pair of propositions, (p, q), is supposed to mean that p is true or q is true, but not both. For example, it might be argued that the normal intention of a statement like &quot; You may have coffee, or you may have tea &quot; is to stipulate that exactly one of the conditions can be true. Certainly under many circumstances a sentence like this example should be taken as forbidding the possibility of one&apos;s accepting both options. Even so, there is good reason to suppose that this sort of sentence is not disjunctive at all. If all we know about some disjunction is that it is true overall, we cannot be sure that either of its disjuncts is true. For example, if a woman has been told that her friend is either at the snack bar or on the tennis court, she cannot validly infer that he is on the tennis court. But if her waiter tells her that she may have coffee or she may have tea, she can validly infer that she may have tea. Nothing classically thought of as a disjunction has this property. This is so even given that she might reasonably take her waiter as having denied her the possibility of having both coffee and tea. (Note: If the waiter intends that choosing neither tea nor coffee is an option i.e. ordering nothing, the appropriate operator is NAND : p NAND q.) In English, the construct &quot; either... or &quot; is usually used to indicate exclusive or and &quot; or &quot; generally used for inclusive. But in Spanish, the word &quot; o &quot; (or) can be used in the form p o q (exclusive) or the form o p o q (inclusive). Formalists may contend that any binary or other n-ary exclusive &quot; or &quot; is true if and only if it has an odd number of true inputs, and there is no word in English that can conjoin a list of two or more options has this general property. For example, Barrett and Stenner contend in the 1971 article &quot; The Myth of the Exclusive &apos;Or (Mind, 80 (317), 116–121) that no author has produced an example of an English or-sentence that appears to be false because both of its inputs are true, and brush off or-sentences such as &quot; The light bulb is either on or off &quot; as reflecting particular facts about the world rather than the nature of the word &quot; or &quot;. However, the &quot; barber paradox &quot; -- Everybody in town shaves himself or is shaved by the barber, who shaves the barber? -- would not be paradoxical if &quot; or &quot; could not be exclusive (although a purist could say that &quot; either &quot; is required in the statement of the paradox). Whether these examples can be considered &quot; natural language &quot; is another question. Certainly when one sees a menu stating &quot; Lunch special: sandwich and soup or salad &quot;, one would not expect to be permitted to order both soup and salad. Nor would one expect to order neither soup nor salad, because that belies the nature of the &quot; special &quot;, that ordering the two items together is cheaper than ordering them a la carte. Similarly, a lunch special consisting of one meat, French fries or mashed potatoes and vegetable would consist of three items, only one of which would be a form of potato. If one wanted to have meat and both kinds of potatoes, one would ask if it were possible to substitute a second order of potatoes for the vegetable. And, one would not expect to be permitted to have both types of potato and vegetable, because the result would be a vegetable plate rather than a meat plate. [ Alternative symbols ] The symbol used for exclusive disjunction varies from one field of application to the next, and even depends on the properties being emphasized in a given context of discussion. In addition to the abbreviation &quot; XOR &quot;, any of the following symbols may also be seen: A plus sign ( + ). This makes sense mathematically because exclusive disjunction corresponds to addition modulo 2, which has the following addition table, clearly isomorphic to the one above: Addition Modulo 2 p q p + q 0 0 0 0 1 1 1 0 1 1 1 0 The use of the plus sign has the added advantage that all of the ordinary algebraic properties of mathematical rings and fields can be used without further ado. However, the plus sign is also used for Inclusive disjunction in some notation systems. A plus sign that is modified in some way, such as being encircled ( \oplus ). This usage faces the objection that this same symbol is already used in mathematics for the direct sum of algebraic structures. A prefixed J, as in Jpq. An inclusive disjunction symbol ( \lor ) that is modified in some way, such as being underlined ( \underline\lor ) or with dot above ( \dot\vee ). In several programming language s, such as C, C++, C#, Java, Perl, MATLAB, and Python, a caret ( ^ ) is used to denote the bitwise XOR operator. This is not used outside of programming contexts because it is too easily confused with other uses of the caret. The symbol 24px, sometimes written as &gt; &lt; or as &gt; - &lt;. In IEC symbology, an exclusive or is marked &quot; =1 &quot;. [ Properties ] Commutativity : yes A \oplus B         \Leftrightarrow         B \oplus A 50px         \Leftrightarrow         50px Associativity : yes ~A ~~~\oplus~~~ (B \oplus C)         \Leftrightarrow         (A \oplus B) ~~~\oplus~~~ ~C 50px ~~~\oplus~~~ 50px         \Leftrightarrow         50px         \Leftrightarrow         50px ~~~\oplus~~~ 50px Distributivity : Logical conjunction distributes over exclusive or. Conjunction and exclusive or form the multiplication and addition operations of a field GF(2), and as in any field they obey the distributive law. Idempotency : no ~A~ ~\oplus~ ~A~         \Leftrightarrow         ~0~         \nLeftrightarrow         ~A~ 36px ~\oplus~ 36px         \Leftrightarrow         36px         \nLeftrightarrow         36px Monotonicity : no A \rightarrow B         \nRightarrow         (A \oplus C) \rightarrow (B \oplus C) 50px         \nRightarrow         50px         \Leftrightarrow         50px \rightarrow 50px Truth-preserving: no When all inputs are true, the output is not true. A \and B         \nRightarrow         A \oplus B 50px         \nRightarrow         60px Falsehood-preserving: yes When all inputs are false, the output is false. A \oplus B         \Rightarrow         A \or B 60px         \Rightarrow         50px Walsh spectrum : (2,0,0,-2) Non- linearity : 0 (the function is linear) If using binary values for true (1) and false (0), then exclusive or works exactly like addition modulo 2. [ Computer science ] { logic gate } [ Bitwise operation ] [ Bitwise operation ] { Nimber addition is the &apos;&apos;exclusive or&apos;&apos; of } { nonnegative integers in } { binary representation. This is also the vector addition in (\Z/2\Z)^4. } Exclusive disjunction is often used for bitwise operations. Examples: 1 xor 1 = 0 1 xor 0 = 1 0 xor 1 = 1 0 xor 0 = 0 1110 xor 1001 = 0111 (this is equivalent to addition without carry ) As noted above, since exclusive disjunction is identical to addition modulo 2, the bitwise exclusive disjunction of two n-bit strings is identical to the standard vector of addition in the vector space (\Z/2\Z)^n. In computer science, exclusive disjunction has several uses: It tells whether two bits are unequal. It is an optional bit-flipper (the deciding input chooses whether to invert the data input). It tells whether there is an odd number of 1  bits ( A \oplus B \oplus C \oplus D \oplus E is true iff an odd number of the variables are true). In logical circuits, a simple adder can be made with an XOR gate to add the numbers, and a series of AND, OR and NOT gates to create the carry output. On some computer architectures, it is more efficient to store a zero in a register by xor-ing the register with itself (bits xor-ed with themselves are always zero) instead of loading and storing the value zero. In simple threshold activated neural network s, modeling the &apos;xor&apos; function requires a second layer because &apos;xor&apos; is not a linearly separable function. Exclusive-or is sometimes used as a simple mixing function in cryptography, for example, with one-time pad or Feistel network systems. Similarly, XOR can be used in generating entropy pool s for hardware random number generator s. The XOR operation preserves randomness, meaning that a random bit XORed with a non-random bit will result in a random bit. Multiple sources of potentially random data can be combined using XOR, and the unpredictability of the output is guaranteed to be at least as good as the best individual source. { http://www.digipedia.pl/usenet/thread/11834/2075/ } { http://www.robertnz.net/pdf/xor2.pdf } XOR is used in RAID 3–6 for creating parity information. For example, RAID can &quot; back up &quot; bytes 10011100 and 01101100 from two (or more) hard drives by XORing ( 11110000 ) and writing to another drive. Under this method, if any one of the three hard drives are lost, the lost byte can be re-created by XORing bytes from the remaining drives. If the drive containing 01101100 is lost, 10011100 and 11110000 can be XORed to recover the lost byte. XOR is also used to detect an overflow in the result of a signed binary arithmetic operation. If the leftmost retained bit of the result is not the same as the infinite number of digits to the left, then that means overflow occurred. XORing those two bits will give a &quot; 1 &quot; if there is an overflow. XOR can be used to swap two numeric variables in computers, using the XOR swap algorithm; however this is regarded as more of a curiosity and not encouraged in practice. In computer graphics, XOR-based drawing methods are often used to manage such items as bounding boxes and cursors on systems without alpha channels or overlay planes. [ See also ] [ 33% ] Affirming a disjunct Ampheck Boolean algebra (logic) List of Boolean algebra topics Boolean domain Boolean function Boolean-valued function Controlled NOT gate Disjunctive syllogism [ 33% ] First-order logic Inclusive or Involution Logical graph Logical value Multigrade operator Operation Parametric operator Parity bit Propositional calculus Rule 90 Symmetric difference XOR linked list XOR gate XOR cipher [ Notes ] [ External links ] An example of XOR being used in cryptography Category:Logic Category:Boolean algebra Category:Binary operations Category:Propositional calculus Category:Logical connectives cs:Exkluzivní disjunkce de:Kontravalenz et:Välistav disjunktsioon es:Disyunción exclusiva eo:Logika malinkluziva aŭo fa:یای مانعةالجمع fr:Fonction OU exclusif ko:배타적 논리합 it:Disgiunzione esclusiva he:או מוציא mk:Исклучителна дисјункција nl:Exclusieve disjunctie ja:排他的論理和 no:Eksklusiv disjunksjon pms:Disgionsion esclusiva pl:Alternatywa wykluczająca pt:Disjunção exclusiva ro:Disjuncție exclusivă ru:Сложение по модулю 2 simple:Exclusive disjunction sk:Vylučujúce alebo tr:XOR kapısı uk:Виключна диз&apos;юнкція zh:逻辑异或
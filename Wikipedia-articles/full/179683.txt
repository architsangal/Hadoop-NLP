[ the job title corporations which develop software Software company ] [ August 2010 ] A software developer is a person concerned with facets of the software development process. Their work includes researching, designing, developing, and testing software. { http://www.onetcodeconnector.org/ccreport/15-1032.00 } A software developer may take part in design, computer programming, or software project management. They may contribute to the overview of the project on the application level rather than component-level or individual programming tasks. Software developers are often still guided by lead programmer s but the description also encompasses freelance software developers. In the US, a software developer is classified into one of 3 titles (all under the 15-0000 Computer and Mathematical Occupations Major Group): [ http://www.bls.gov/oes/current/oes150000.htm 15-0000 Computer and Mathematical Occupations (Major Group) US Bureau of Labor Statistics ] [ http://www.bls.gov/oes/current/oes151131.htm 15-1131 Computer Programmers US Bureau of Labor Statistics ] [ http://www.bls.gov/oes/current/oes151132.htm 15-1132 Software Developers, Applications US Bureau of Labor Statistics ] [ http://www.bls.gov/oes/current/oes151133.htm 15-1133 Software Developers, Systems Software US Bureau of Labor Statistics ] 15-1131 Computer Programmers 15-1132 Software Developers, Applications 15-1133 Software Developers, Systems Software A person who develops stand-alone software (that is more than just a simple program) and got involved with all phases of the development (design and code) is a software developer. [ March 2011 ] Some of the notable software people include Peter Norton (developer of Norton Utilities), Richard Garriott ( Ultima -series creator), and Philippe Kahn ( Borland key founder), all of whom started as entrepreneurial individual or small-team software developers before becoming rich and famous. Other names which are often used in the same close context are programmer, software analyst, and software engineer. According to developer Eric Sink, the differences between system design, software development and programming are more apparent. Already in the current market place there can be found a segregation between programmer s and developers, [ March 2011 ] being that one who implements is not the same as the one who designs the class structure or hierarchy. Even more so that developers become systems architect s, those who design the multi-leveled architecture or component interactions of a large software system. [ http://software.ericsink.com/No_Programmers.html Small ISVs: You need Developers, not Programmers Eric Sink sourcegear 2008-06-06 A programmer is someone who does nothing but code new features and (if you&apos;re lucky) fix bugs. They don&apos;t write specs. They don&apos;t write automated test cases. They don&apos;t help keep the automated build system up to date. They don&apos;t help customers work out tough problems. They don&apos;t help write documentation. They don&apos;t help with testing. They don&apos;t even read code. All they do is write new code. ] (see also Debate over who is a software engineer ) Aspects of developer&apos;s job may include: Software design Actual core implementation (programming which is often the most important portion of software development) Other required implementations (e.g. installation, configuration, customization, integration, data migration) Participation in software product definition, including business case or gap analysis Specification Requirements analysis Development and refinement of throw-away simulations or prototypes to confirm requirements Feasibility and cost–benefit analysis, including the choice of application architecture and framework, leading to the budget and schedule for the project Authoring of documentation needed by users and implementation partners etc. Testing, including defining/supporting acceptance testing and gathering feedback from pre-release testers Participation in software release and post-release activities, including support for product launch evangelism (e.g. developing demonstrations and/or samples) and competitive analysis for subsequent product build/release cycles Maintenance In a large company, there may be employees whose sole responsibility may consist of only one of the phases above. In smaller development environments, a few, or even a single individual might handle the complete process. [ Separation of concerns ] In more mature engineering disciplines such as mechanical, civil and electrical engineering, the designers are separate from the implementers. That is, the engineers who generate design documents are not the same individuals who actually build things (such as mechanical parts, circuits, or roads, for instance). In software engineering, it is more common to have the architecture, design, implementation, and test functions performed by a single individual. In particular, the design and implementation of source code is commonly integrated. [ April 2011 ] This resembles the early phases of industrialization in which individuals would both design and build things. More mature organizations have separate test groups, but the architecture, design, implementation, and unit test functions are often performed by the same highly trained individuals. [ April 2011 ] [ References ] Category:Computer programmers Software developer Category:Computer occupations af:Sagtewareontwikkelaar ar:مطور برمجيات bn:সফটওয়্যার ডেভলপার bg:Софтуерен разработчик ca:Desenvolupador de programari cs:Vývojář de:Softwareentwickler et:Tarkvara arendaja es:Desarrollador de software eu:Software garatzaile fa:توسعه‌دهنده fr:Développeur ko:소프트웨어 개발자 id:Pengembang perangkat lunak it:Sviluppatore software ms:Pembangun perisian nl:Softwareontwikkelaar ja:ソフトウェア開発者 ru:Разработчик программного обеспечения simple:Software developer fi:Ohjelmistosuunnittelija sv:Systemutvecklare ta:மென்பொருள் உருவாக்குனர் th:นักพัฒนาซอฟต์แวร์ tr:Yazılım geliştirici vi:Nhà phát triển phần mềm zh:软件设计师